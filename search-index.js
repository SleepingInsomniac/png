crystal_doc_search_index_callback({"repository_name":"png","body":"# PNG\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     PNG:\n       github: sleepinginsomniac/png\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n### Reading\n\n```crystal\nrequire \"png\"\n\ncanvas = PNG.read(\"examples/gradient.png\")\ncanvas.header.color_type # => PNG::ColorType::RGB\ncanvas[0, 0]             # => Bytes[0, 255, 0]\n```\n\n### Writing\n\n```crystal\nrequire \"png\"\n\ncanvas = PNG::Canvas.new(255, 255)\n0u8.upto(canvas.height - 1) do |y|\n  0u8.upto(canvas.width - 1) do |x|\n    canvas[x, y] = {x, 255u8, y}\n  end\nend\n\nPNG.write(\"examples/gradient.png\", canvas)\n```\n\n![Color gradient](examples/gradient.png)\n\n```crystal\nrequire \"png\"\n\ncanvas = PNG::Canvas.new(255, 255)\n\n0.upto(canvas.height - 1) do |y|\n  0.upto(canvas.width - 1) do |x|\n    hue = (x / canvas.width) * 360.0\n    value = 1 - (y / canvas.height)\n    hsv = PNG::HSV.new(hue, 1.0, value)\n    canvas[x, y] = PNG::RGB(UInt8).from_hsv(hsv)\n  end\nend\n\nPNG.write(\"examples/test_pattern.png\", canvas)\n```\n\n![Test pattern](examples/test_pattern.png)\n\n```crystal\nrequire \"png\"\n\n# 1-bit black and white\ncanvas = PNG::Canvas.new(PNG::Header.new(10, 10, bit_depth: 1, color_type: PNG::ColorType::Grayscale))\n0.upto(canvas.height - 1) do |y|\n  0.upto(canvas.width - 1) do |x|\n    canvas[x, y] = {1u8} if (x + y) % 2 == 0\n  end\nend\n\nPNG.write(\"examples/1bit_checker.png\", canvas)\n```\n\n![1Bit B/W](examples/1bit_checker.png)\n\n___\n\n#### ColorTypes\n\nAll PNG color types and bit depths are supported for reading / writing\n\n| ColorType      | 1bit | 2bit | 4bit | 8bit | 16bit |\n|----------------|------|------|------|------|-------|\n| Grayscale      | r/w  | r/w  | r/w  | r/w  | r/w   |\n| TrueColor      | r/w  | r/w  | r/w  | r/w  | r/w   |\n| Indexed        |      |      |      | r/w  |       |\n| GrayscaleAlpha | r/w  | r/w  | r/w  | r/w  | r/w   |\n| TrueColorAlpha | r/w  | r/w  | r/w  | r/w  | r/w   |\n\n#### FilterMethods\n\n| Name    | Support |\n|---------|---------|\n| None    | r/w     |\n| Sub     | r/w     |\n| Up      | r/w     |\n| Average | r/w     |\n| Paeth   | r/w     |\n\n#### Interlacing\n\n| Name  |     |\n|-------|-----|\n| None  | r/w |\n| Adam7 | r/w |\n\n#### Ancillary Chunks\n\n| Name | Support |\n|------|---------|\n| cHRM | -       |\n| gAMA | Yes     |\n| iCCP | -       |\n| sBIT | -       |\n| sRGB | -       |\n| bKGD | Yes     |\n| hIST | -       |\n| tRNS | -       |\n| pHYs | Yes     |\n| sPLT | -       |\n| tIME | Yes     |\n| iTXt | -       |\n| tEXt | -       |\n| zTXt | -       |\n\n## Contributing\n\n1. Fork it (<https://github.com/sleepinginsomniac/png/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Alex Clink](https://github.com/sleepinginsomniac) - creator and maintainer\n","program":{"html_id":"png/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"png","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"png/PNG","path":"PNG.html","kind":"module","full_name":"PNG","name":"PNG","abstract":false,"locations":[{"filename":"src/png.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png.cr#L11"},{"filename":"src/png/canvas.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L3"},{"filename":"src/png/chunk.cr","line_number":4,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/chunk.cr#L4"},{"filename":"src/png/colors.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L1"},{"filename":"src/png/colors/gray.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L1"},{"filename":"src/png/colors/gray_alpha.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L1"},{"filename":"src/png/colors/hsv.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L1"},{"filename":"src/png/colors/rgb.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L1"},{"filename":"src/png/colors/rgba.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L1"},{"filename":"src/png/enums/color_type.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/color_type.cr#L1"},{"filename":"src/png/enums/compression_method.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/compression_method.cr#L1"},{"filename":"src/png/enums/filter_method.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/filter_method.cr#L1"},{"filename":"src/png/enums/filter_type.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/filter_type.cr#L1"},{"filename":"src/png/enums/interlacing.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/interlacing.cr#L1"},{"filename":"src/png/error.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/error.cr#L1"},{"filename":"src/png/header.cr","line_number":4,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L4"},{"filename":"src/png/inflater.cr","line_number":5,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/inflater.cr#L5"},{"filename":"src/png/parser.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L1"},{"filename":"src/png/pixel_size.cr","line_number":1,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L1"},{"filename":"src/png/scanline.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L3"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MAGIC","name":"MAGIC","value":"Bytes[137, 80, 78, 71, 13, 10, 26, 10]","doc":"MAGIC is the first 8 bytes of a PNG file: \"\\x89PNG\\r\\n\\x1a\\n\"","summary":"<p>MAGIC is the first 8 bytes of a PNG file: &quot;\\x89PNG\\r\\n\\x1a\\n&quot;</p>"},{"id":"VERSION","name":"VERSION","value":"{{ (`shards version`).stringify.chomp }}"}],"class_methods":[{"html_id":"read(path:String):Canvas-class-method","name":"read","doc":"Reads a png stream returns a *PNG::Canvas*\n\n```\ncanvas = PNG.read(\"examples/gradient.png\")\ncanvas.header.color_type # => PNG::ColorType::RGB\ncanvas[0, 0]             # => Bytes[0, 255, 0]\n```\n","summary":"<p>Reads a png stream returns a <em>PNG::Canvas</em></p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String) : Canvas","args_html":"(path : String) : <a href=\"PNG/Canvas.html\">Canvas</a>","location":{"filename":"src/png.cr","line_number":38,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png.cr#L38"},"def":{"name":"read","args":[{"name":"path","external_name":"path","restriction":"String"}],"return_type":"Canvas","visibility":"Public","body":"PNG.debug(\"Reading path: #{path}\")\nFile.open(path, \"rb\") do |io|\n  self.read(io)\nend\n"}},{"html_id":"read(io:IO):Canvas-class-method","name":"read","doc":"Reads a png stream returns a *PNG::Canvas*\n\n```\ncanvas = PNG.read(\"examples/gradient.png\")\ncanvas.header.color_type # => PNG::ColorType::RGB\ncanvas[0, 0]             # => Bytes[0, 255, 0]\n```\n","summary":"<p>Reads a png stream returns a <em>PNG::Canvas</em></p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Canvas","args_html":"(io : IO) : <a href=\"PNG/Canvas.html\">Canvas</a>","location":{"filename":"src/png.cr","line_number":44,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png.cr#L44"},"def":{"name":"read","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Canvas","visibility":"Public","body":"png_magic = Bytes.new(8)\nio.read_fully(png_magic)\nif png_magic == MAGIC\nelse\n  raise(Error.new(\"PNG magic mismatch: #{png_magic}\"))\nend\nheader = uninitialized Header\nChunk.read(io) do |chunk_type, io, byte_size|\n  if chunk_type == \"IHDR\"\n  else\n    raise(Error.new(\"Wrong chunk type: #{chunk_type} (not IHDR)\"))\n  end\n  header = Header.parse(io)\n  PNG.debug(header)\nend\ninflater = Inflater.new\nparser = Parser.new(header)\ncanvas = Canvas.new(header)\nprevious = Scanline.new(header, FilterMethod::None, Bytes.new(parser.scanline_size))\nrow_buffer = Bytes.new(parser.scanline_size + 1)\npixel_size = header.width * header.height\npixel = 0\nloop do\n  chunk_type = Chunk.read(io) do |chunk_type, io, byte_size|\n    case chunk_type\n    when \"PLTE\"\n      palette = Bytes.new(byte_size)\n      io.read_fully(palette)\n      canvas.palette = palette\n    when \"IDAT\"\n      while byte = io.read_byte\n        inflater.inhale(byte)\n        while inflater.bytes_available >= row_buffer.size\n          inflater.read(row_buffer)\n          scanline = Scanline.new(header, FilterMethod.new(row_buffer[0]), row_buffer[1..])\n          scanline.unfilter(previous)\n          pixel = pixel + parser.row_pixels\n          y = parser.y\n          parser.row_pixels.times do |n|\n            x = parser.x(n)\n            bytes = scanline.pixel(n)\n            canvas[x, y] = bytes\n          end\n          if pixel >= pixel_size\n            break\n          end\n          if parser.next\n            previous.data = Bytes.new(parser.scanline_size)\n            row_buffer = Bytes.new(parser.scanline_size + 1)\n          else\n            previous.data.copy_from(scanline.data)\n          end\n        end\n      end\n    when \"pHYs\"\n      canvas.pixel_size = PixelSize.parse(io)\n      PNG.debug(\"pHYs: #{canvas.pixel_size}\")\n    when \"bKGD\"\n      bg_color = Bytes.new(header.bytes_per_pixel)\n      io.read_fully(bg_color)\n      canvas.bg_color = bg_color\n      PNG.debug(\"bKGD: #{bg_color}\")\n    when \"tIME\"\n      year = (io.read_bytes(UInt16, IO::ByteFormat::BigEndian)).to_i32\n      month = (io.read_bytes(UInt8)).to_i32\n      day = (io.read_bytes(UInt8)).to_i32\n      hour = (io.read_bytes(UInt8)).to_i32\n      minute = (io.read_bytes(UInt8)).to_i32\n      second = (io.read_bytes(UInt8)).to_i32\n      canvas.last_modified = Time.utc(year, month, day, hour, minute, second)\n      PNG.debug(\"tIME: #{canvas.last_modified}\")\n    when \"gAMA\"\n      canvas.gama = io.read_bytes(UInt32, IO::ByteFormat::BigEndian)\n      PNG.debug(\"gAMA: #{canvas.gama}\")\n    when \"IEND\"\n    else\n      PNG.debug(\"Ignoring #{chunk_type} chunk\")\n    end\n  end\n  if chunk_type == \"IEND\"\n    break\n  end\nend\ncanvas\n"}},{"html_id":"write(path:String,canvas:Canvas)-class-method","name":"write","doc":"Write a *canvas* to a .png file given a *path*\n\n```\ncanvas = PNG::Canvas.new(255, 255)\n0.upto(canvas.height - 1) do |y|\n  0.upto(canvas.width - 1) do |x|\n    canvas[x, y] = Bytes[x, 255, y]\n  end\nend\n\nPNG.write(\"examples/gradient.png\", canvas)\n```","summary":"<p>Write a <em>canvas</em> to a .png file given a <em>path</em></p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"canvas","external_name":"canvas","restriction":"Canvas"}],"args_string":"(path : String, canvas : Canvas)","args_html":"(path : String, canvas : <a href=\"PNG/Canvas.html\">Canvas</a>)","location":{"filename":"src/png.cr","line_number":146,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png.cr#L146"},"def":{"name":"write","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"canvas","external_name":"canvas","restriction":"Canvas"}],"visibility":"Public","body":"File.open(path, \"w\") do |file|\n  PNG.write(file, canvas)\nend"}},{"html_id":"write(io:IO,canvas:Canvas)-class-method","name":"write","doc":"Write a *canvas* to a given *io* in png format.","summary":"<p>Write a <em>canvas</em> to a given <em>io</em> in png format.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"canvas","external_name":"canvas","restriction":"Canvas"}],"args_string":"(io : IO, canvas : Canvas)","args_html":"(io : IO, canvas : <a href=\"PNG/Canvas.html\">Canvas</a>)","location":{"filename":"src/png.cr","line_number":153,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png.cr#L153"},"def":{"name":"write","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"canvas","external_name":"canvas","restriction":"Canvas"}],"visibility":"Public","body":"io.write(MAGIC)\ncanvas.header.write(io)\nif last_modified = canvas.last_modified\n  Chunk.write(\"tIME\", io) do |data|\n    year = data.write_bytes(last_modified.year.to_u16, IO::ByteFormat::BigEndian)\n    month = data.write_byte(last_modified.month.to_u8)\n    day = data.write_byte(last_modified.day.to_u8)\n    hour = data.write_byte(last_modified.hour.to_u8)\n    minute = data.write_byte(last_modified.minute.to_u8)\n    second = data.write_byte(last_modified.second.to_u8)\n  end\nend\nif pixel_size = canvas.pixel_size\n  Chunk.write(\"pHYs\", io) do |data|\n    pixel_size.write(data)\n  end\nend\nif gama = canvas.gama\n  Chunk.write(\"gAMA\", io) do |data|\n    data.write_bytes(gama, IO::ByteFormat::BigEndian)\n  end\nend\nif canvas.header.color_type.indexed?\n  if palette = canvas.palette\n    Chunk.write(\"PLTE\", io, palette)\n  else\n    raise(Error.new(\"Missing palette for Indexed color type\"))\n  end\nend\nif bg_color = canvas.bg_color\n  Chunk.write(\"bKGD\", io, bg_color)\nend\nChunk.write(\"IDAT\", io) do |data|\n  previous : Scanline | ::Nil = nil\n  Compress::Zlib::Writer.open(data) do |deflate|\n    case canvas.header.interlacing\n    when .none?\n      0_u32.upto(canvas.height - 1) do |y|\n        bpr = canvas.bytes_per_row\n        offset = y * bpr\n        scanline = Scanline.new(canvas.header, FilterMethod::None, canvas.data[offset...(offset + bpr)])\n        deflate.write_byte(scanline.filter.value)\n        scanline.filter(previous) do |byte|\n          deflate.write_byte(byte)\n        end\n        previous = scanline\n      end\n    else\n      index = 0\n      parser = Parser.new(canvas.header)\n      total_pixels = canvas.width * canvas.height\n      while !index >= total_pixels\n        row_pixels = parser.row_pixels\n        bpr = canvas.header.bytes_per_row(row_pixels)\n        scanline = Scanline.new(canvas.header, FilterMethod::None, Bytes.new(bpr))\n        y = parser.y\n        row_pixels.times do |n|\n          x = parser.x(n)\n          scanline.set_pixel(n, canvas[x, y])\n        end\n        index = index + row_pixels\n        deflate.write_byte(scanline.filter.value)\n        scanline.filter(previous) do |byte|\n          deflate.write_byte(byte)\n        end\n        previous = scanline\n        if parser.next\n          previous = nil\n        end\n      end\n    end\n  end\nend\nChunk.write(\"IEND\", io, Bytes[])\n"}}],"macros":[{"html_id":"debug(args)-macro","name":"debug","doc":"Only logs messages if built with `-Dpng-debug`","summary":"<p>Only logs messages if built with <code>-Dpng-debug</code></p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(args)","args_html":"(args)","location":{"filename":"src/png.cr","line_number":13,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png.cr#L13"},"def":{"name":"debug","args":[{"name":"args","external_name":"args","restriction":""}],"visibility":"Public","body":"    \n{% if flag?(:\"png-debug\") %}\n      if typeof({{ args }}) == String\n        STDOUT.puts({{ args }})\n      else\n        pp({{ args }})\n      end\n    {% end %}\n\n  \n"}}],"types":[{"html_id":"png/PNG/Canvas","path":"PNG/Canvas.html","kind":"class","full_name":"PNG::Canvas","name":"Canvas","abstract":false,"superclass":{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/canvas.cr","line_number":6,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L6"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"doc":"A canvas holds all of the PNG data including the header and other chunk information\n","summary":"<p>A canvas holds all of the PNG data including the header and other chunk information</p>","constructors":[{"html_id":"new(width:UInt32,height:UInt32,palette:Slice(UInt8)|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"width","external_name":"width","restriction":"UInt32"},{"name":"height","external_name":"height","restriction":"UInt32"},{"name":"palette","default_value":"nil","external_name":"palette","restriction":"::Slice(::UInt8) | ::Nil"}],"args_string":"(width : UInt32, height : UInt32, palette : Slice(UInt8) | Nil = nil)","args_html":"(width : UInt32, height : UInt32, palette : Slice(UInt8) | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/png/canvas.cr","line_number":20,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L20"},"def":{"name":"new","args":[{"name":"width","external_name":"width","restriction":"UInt32"},{"name":"height","external_name":"height","restriction":"UInt32"},{"name":"palette","default_value":"nil","external_name":"palette","restriction":"::Slice(::UInt8) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(width, height, palette)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(header:PNG::Header,data:Bytes|Nil=nil,palette:Slice(UInt8)|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"header","external_name":"header","restriction":"::PNG::Header"},{"name":"data","default_value":"nil","external_name":"data","restriction":"Bytes | ::Nil"},{"name":"palette","default_value":"nil","external_name":"palette","restriction":"::Slice(::UInt8) | ::Nil"}],"args_string":"(header : PNG::Header, data : Bytes | Nil = nil, palette : Slice(UInt8) | Nil = nil)","args_html":"(header : <a href=\"../PNG/Header.html\">PNG::Header</a>, data : Bytes | Nil = <span class=\"n\">nil</span>, palette : Slice(UInt8) | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/png/canvas.cr","line_number":29,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L29"},"def":{"name":"new","args":[{"name":"header","external_name":"header","restriction":"::PNG::Header"},{"name":"data","default_value":"nil","external_name":"data","restriction":"Bytes | ::Nil"},{"name":"palette","default_value":"nil","external_name":"palette","restriction":"::Slice(::UInt8) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(header, data, palette)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](x:UInt32,y:UInt32)-instance-method","name":"[]","doc":"Get the pixel at x, y into the canvas.\nThis returns the Bytes that represent the pixel.","summary":"<p>Get the pixel at x, y into the canvas.</p>","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"UInt32"},{"name":"y","external_name":"y","restriction":"UInt32"}],"args_string":"(x : UInt32, y : UInt32)","args_html":"(x : UInt32, y : UInt32)","location":{"filename":"src/png/canvas.cr","line_number":90,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L90"},"def":{"name":"[]","args":[{"name":"x","external_name":"x","restriction":"UInt32"},{"name":"y","external_name":"y","restriction":"UInt32"}],"visibility":"Public","body":"case @header.bit_depth\nwhen .<(8)\n  bit_offset = bit_index(x, y)\n  shift = 8_u8 - @header.bit_depth\n  max = UInt8::MAX >> shift\n  Bytes.new(@header.color_type.channels.to_i32) do |n|\n    offset, bit = (bit_offset + (n * @header.bit_depth)).divmod(8)\n    (@data[offset] >> (shift &- bit)) & max\n  end\nwhen 8, 16\n  offset = byte_index(x, y)\n  @data[offset...(offset + @header.bytes_per_pixel)]\nelse\n  raise(Error.new(\"Invalid bit depth: #{@header.bit_depth}\"))\nend"}},{"html_id":"[](x:Int,y:Int)-instance-method","name":"[]","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"Int"},{"name":"y","external_name":"y","restriction":"Int"}],"args_string":"(x : Int, y : Int)","args_html":"(x : Int, y : Int)","location":{"filename":"src/png/canvas.cr","line_number":110,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L110"},"def":{"name":"[]","args":[{"name":"x","external_name":"x","restriction":"Int"},{"name":"y","external_name":"y","restriction":"Int"}],"visibility":"Public","body":"self[x.to_u32, y.to_u32]"}},{"html_id":"[]=(x:UInt32,y:UInt32,values:Enumerable(UInt8))-instance-method","name":"[]=","doc":"Set the pixel at *x*, *y* on the canvas via bytes that correspond to the\ncolor type and bit depth.\n\nFor example, an image with 8bits per channel in RGB (`PNG::ColorType::TrueColor`)\nwould be set with 3 bytes: `canvas[0, 0] = Bytes[255, 0, 255]`\n\nA canvas with 16bits in RGB would accept 6 bytes, (2 bytes per channel):\n`canvas[0, 0] = Bytes[255, 255, 0, 0, 255, 255]`\n","summary":"<p>Set the pixel at <em>x</em>, <em>y</em> on the canvas via bytes that correspond to the color type and bit depth.</p>","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"UInt32"},{"name":"y","external_name":"y","restriction":"UInt32"},{"name":"values","external_name":"values","restriction":"Enumerable(UInt8)"}],"args_string":"(x : UInt32, y : UInt32, values : Enumerable(UInt8))","args_html":"(x : UInt32, y : UInt32, values : Enumerable(UInt8))","location":{"filename":"src/png/canvas.cr","line_number":60,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L60"},"def":{"name":"[]=","args":[{"name":"x","external_name":"x","restriction":"UInt32"},{"name":"y","external_name":"y","restriction":"UInt32"},{"name":"values","external_name":"values","restriction":"Enumerable(UInt8)"}],"visibility":"Public","body":"if values.size != @header.bytes_per_pixel\n  raise(Error.new(\"Value must correspond to bit depth and channel count (#{@header.bytes_per_pixel} bytes)\"))\nend\ncase @header.bit_depth\nwhen .<(8)\n  shift = 8_u8 - @header.bit_depth\n  max = UInt8::MAX >> shift\n  bit_offset = bit_index(x, y)\n  values.each_with_index do |value, n|\n    offset, bit = (bit_offset + (bit_depth * n)).divmod(8)\n    __temp_52 = offset\n    @data[__temp_52] = @data[__temp_52] | (value << ((8 &- @header.bit_depth) - bit))\n  end\nwhen 8, 16\n  offset = byte_index(x, y)\n  values.each_with_index do |v, n|\n    @data[offset + n] = v\n  end\nelse\n  raise(Error.new(\"Invalid bit depth: #{@header.bit_depth}\"))\nend\n"}},{"html_id":"[]=(x:Int,y:Int,values)-instance-method","name":"[]=","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"Int"},{"name":"y","external_name":"y","restriction":"Int"},{"name":"values","external_name":"values","restriction":""}],"args_string":"(x : Int, y : Int, values)","args_html":"(x : Int, y : Int, values)","location":{"filename":"src/png/canvas.cr","line_number":84,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L84"},"def":{"name":"[]=","args":[{"name":"x","external_name":"x","restriction":"Int"},{"name":"y","external_name":"y","restriction":"Int"},{"name":"values","external_name":"values","restriction":""}],"visibility":"Public","body":"self[x.to_u32, y.to_u32] = values"}},{"html_id":"bg_color:Bytes|Nil-instance-method","name":"bg_color","abstract":false,"location":{"filename":"src/png/canvas.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L11"},"def":{"name":"bg_color","return_type":"Bytes | ::Nil","visibility":"Public","body":"@bg_color"}},{"html_id":"bg_color=(bg_color:Bytes|Nil)-instance-method","name":"bg_color=","abstract":false,"args":[{"name":"bg_color","external_name":"bg_color","restriction":"Bytes | ::Nil"}],"args_string":"(bg_color : Bytes | Nil)","args_html":"(bg_color : Bytes | Nil)","location":{"filename":"src/png/canvas.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L11"},"def":{"name":"bg_color=","args":[{"name":"bg_color","external_name":"bg_color","restriction":"Bytes | ::Nil"}],"visibility":"Public","body":"@bg_color = bg_color"}},{"html_id":"bit_depth(*args,**options)-instance-method","name":"bit_depth","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"bit_depth","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.bit_depth(*args, **options)"}},{"html_id":"bit_depth(*args,**options,&)-instance-method","name":"bit_depth","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"bit_depth","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.bit_depth(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"bit_index(x:UInt32,y:UInt32)-instance-method","name":"bit_index","doc":"Calculates the index into the canvas that a value would be at, accounting\nfor padding that would exist at the end of a scanline where bit depth < 8","summary":"<p>Calculates the index into the canvas that a value would be at, accounting for padding that would exist at the end of a scanline where bit depth &lt; 8</p>","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"UInt32"},{"name":"y","external_name":"y","restriction":"UInt32"}],"args_string":"(x : UInt32, y : UInt32)","args_html":"(x : UInt32, y : UInt32)","location":{"filename":"src/png/canvas.cr","line_number":43,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L43"},"def":{"name":"bit_index","args":[{"name":"x","external_name":"x","restriction":"UInt32"},{"name":"y","external_name":"y","restriction":"UInt32"}],"visibility":"Public","body":"((y * header.bytes_per_row) * 8) + (x * @header.bits_per_pixel)"}},{"html_id":"bits_per_pixel(*args,**options)-instance-method","name":"bits_per_pixel","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"bits_per_pixel","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.bits_per_pixel(*args, **options)"}},{"html_id":"bits_per_pixel(*args,**options,&)-instance-method","name":"bits_per_pixel","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"bits_per_pixel","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.bits_per_pixel(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"byte_index(x:UInt32,y:UInt32)-instance-method","name":"byte_index","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"UInt32"},{"name":"y","external_name":"y","restriction":"UInt32"}],"args_string":"(x : UInt32, y : UInt32)","args_html":"(x : UInt32, y : UInt32)","location":{"filename":"src/png/canvas.cr","line_number":47,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L47"},"def":{"name":"byte_index","args":[{"name":"x","external_name":"x","restriction":"UInt32"},{"name":"y","external_name":"y","restriction":"UInt32"}],"visibility":"Public","body":"(bit_index(x, y)) // 8"}},{"html_id":"bytes_per_pixel(*args,**options)-instance-method","name":"bytes_per_pixel","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"bytes_per_pixel","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.bytes_per_pixel(*args, **options)"}},{"html_id":"bytes_per_pixel(*args,**options,&)-instance-method","name":"bytes_per_pixel","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"bytes_per_pixel","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.bytes_per_pixel(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"bytes_per_row(*args,**options)-instance-method","name":"bytes_per_row","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"bytes_per_row","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.bytes_per_row(*args, **options)"}},{"html_id":"bytes_per_row(*args,**options,&)-instance-method","name":"bytes_per_row","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"bytes_per_row","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.bytes_per_row(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"color(x,y)-instance-method","name":"color","doc":"Get the color at x, y","summary":"<p>Get the color at x, y</p>","abstract":false,"args":[{"name":"x","external_name":"x","restriction":""},{"name":"y","external_name":"y","restriction":""}],"args_string":"(x, y)","args_html":"(x, y)","location":{"filename":"src/png/canvas.cr","line_number":115,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L115"},"def":{"name":"color","args":[{"name":"x","external_name":"x","restriction":""},{"name":"y","external_name":"y","restriction":""}],"visibility":"Public","body":"@header.colorize(self[x, y], @palette)"}},{"html_id":"color_type(*args,**options)-instance-method","name":"color_type","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"color_type","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.color_type(*args, **options)"}},{"html_id":"color_type(*args,**options,&)-instance-method","name":"color_type","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"color_type","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.color_type(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"data:Bytes-instance-method","name":"data","abstract":false,"location":{"filename":"src/png/canvas.cr","line_number":8,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L8"},"def":{"name":"data","return_type":"Bytes","visibility":"Public","body":"@data"}},{"html_id":"data=(data:Bytes)-instance-method","name":"data=","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Bytes"}],"args_string":"(data : Bytes)","args_html":"(data : Bytes)","location":{"filename":"src/png/canvas.cr","line_number":8,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L8"},"def":{"name":"data=","args":[{"name":"data","external_name":"data","restriction":"Bytes"}],"visibility":"Public","body":"@data = data"}},{"html_id":"gama:UInt32|Nil-instance-method","name":"gama","abstract":false,"location":{"filename":"src/png/canvas.cr","line_number":13,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L13"},"def":{"name":"gama","return_type":"UInt32 | ::Nil","visibility":"Public","body":"@gama"}},{"html_id":"gama=(gama:UInt32|Nil)-instance-method","name":"gama=","abstract":false,"args":[{"name":"gama","external_name":"gama","restriction":"UInt32 | ::Nil"}],"args_string":"(gama : UInt32 | Nil)","args_html":"(gama : UInt32 | Nil)","location":{"filename":"src/png/canvas.cr","line_number":13,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L13"},"def":{"name":"gama=","args":[{"name":"gama","external_name":"gama","restriction":"UInt32 | ::Nil"}],"visibility":"Public","body":"@gama = gama"}},{"html_id":"header:Header-instance-method","name":"header","abstract":false,"location":{"filename":"src/png/canvas.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L7"},"def":{"name":"header","return_type":"Header","visibility":"Public","body":"@header"}},{"html_id":"header=(header:Header)-instance-method","name":"header=","abstract":false,"args":[{"name":"header","external_name":"header","restriction":"Header"}],"args_string":"(header : Header)","args_html":"(header : <a href=\"../PNG/Header.html\">Header</a>)","location":{"filename":"src/png/canvas.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L7"},"def":{"name":"header=","args":[{"name":"header","external_name":"header","restriction":"Header"}],"visibility":"Public","body":"@header = header"}},{"html_id":"height(*args,**options)-instance-method","name":"height","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"height","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.height(*args, **options)"}},{"html_id":"height(*args,**options,&)-instance-method","name":"height","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"height","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.height(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"interlaced?:Bool-instance-method","name":"interlaced?","abstract":false,"location":{"filename":"src/png/canvas.cr","line_number":37,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L37"},"def":{"name":"interlaced?","return_type":"Bool","visibility":"Public","body":"!@header.interlacing.none?"}},{"html_id":"last_modified:Time|Nil-instance-method","name":"last_modified","abstract":false,"location":{"filename":"src/png/canvas.cr","line_number":12,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L12"},"def":{"name":"last_modified","return_type":"Time | ::Nil","visibility":"Public","body":"@last_modified"}},{"html_id":"last_modified=(last_modified:Time|Nil)-instance-method","name":"last_modified=","abstract":false,"args":[{"name":"last_modified","external_name":"last_modified","restriction":"Time | ::Nil"}],"args_string":"(last_modified : Time | Nil)","args_html":"(last_modified : Time | Nil)","location":{"filename":"src/png/canvas.cr","line_number":12,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L12"},"def":{"name":"last_modified=","args":[{"name":"last_modified","external_name":"last_modified","restriction":"Time | ::Nil"}],"visibility":"Public","body":"@last_modified = last_modified"}},{"html_id":"palette:Bytes|Nil-instance-method","name":"palette","abstract":false,"location":{"filename":"src/png/canvas.cr","line_number":9,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L9"},"def":{"name":"palette","return_type":"Bytes | ::Nil","visibility":"Public","body":"@palette"}},{"html_id":"palette=(palette:Bytes|Nil)-instance-method","name":"palette=","abstract":false,"args":[{"name":"palette","external_name":"palette","restriction":"Bytes | ::Nil"}],"args_string":"(palette : Bytes | Nil)","args_html":"(palette : Bytes | Nil)","location":{"filename":"src/png/canvas.cr","line_number":9,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L9"},"def":{"name":"palette=","args":[{"name":"palette","external_name":"palette","restriction":"Bytes | ::Nil"}],"visibility":"Public","body":"@palette = palette"}},{"html_id":"pixel_size:PixelSize|Nil-instance-method","name":"pixel_size","abstract":false,"location":{"filename":"src/png/canvas.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L10"},"def":{"name":"pixel_size","return_type":"PixelSize | ::Nil","visibility":"Public","body":"@pixel_size"}},{"html_id":"pixel_size=(pixel_size:PixelSize|Nil)-instance-method","name":"pixel_size=","abstract":false,"args":[{"name":"pixel_size","external_name":"pixel_size","restriction":"PixelSize | ::Nil"}],"args_string":"(pixel_size : PixelSize | Nil)","args_html":"(pixel_size : <a href=\"../PNG/PixelSize.html\">PixelSize</a> | Nil)","location":{"filename":"src/png/canvas.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L10"},"def":{"name":"pixel_size=","args":[{"name":"pixel_size","external_name":"pixel_size","restriction":"PixelSize | ::Nil"}],"visibility":"Public","body":"@pixel_size = pixel_size"}},{"html_id":"set_color(x,y,color)-instance-method","name":"set_color","abstract":false,"args":[{"name":"x","external_name":"x","restriction":""},{"name":"y","external_name":"y","restriction":""},{"name":"color","external_name":"color","restriction":""}],"args_string":"(x, y, color)","args_html":"(x, y, color)","location":{"filename":"src/png/canvas.cr","line_number":119,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L119"},"def":{"name":"set_color","args":[{"name":"x","external_name":"x","restriction":""},{"name":"y","external_name":"y","restriction":""},{"name":"color","external_name":"color","restriction":""}],"visibility":"Public","body":""}},{"html_id":"width(*args,**options)-instance-method","name":"width","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"width","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.width(*args, **options)"}},{"html_id":"width(*args,**options,&)-instance-method","name":"width","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/canvas.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/canvas.cr#L15"},"def":{"name":"width","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.width(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}]},{"html_id":"png/PNG/Chunk","path":"PNG/Chunk.html","kind":"class","full_name":"PNG::Chunk","name":"Chunk","abstract":false,"superclass":{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/chunk.cr","line_number":5,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/chunk.cr#L5"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"class_methods":[{"html_id":"read(io:IO,&)-class-method","name":"read","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO, &)","args_html":"(io : IO, &)","location":{"filename":"src/png/chunk.cr","line_number":9,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/chunk.cr#L9"},"def":{"name":"read","args":[{"name":"io","external_name":"io","restriction":"IO"}],"yields":3,"block_arity":3,"visibility":"Public","body":"byte_size = io.read_bytes(UInt32, IO::ByteFormat::BigEndian)\ncrc_io = IO::Digest.new(io, Digest::CRC32.new, IO::Digest::DigestMode::Read)\nchunk_type_bytes = Bytes.new(4)\ncrc_io.read_fully(chunk_type_bytes)\nchunk_type = String.new(chunk_type_bytes)\nsized_io = IO::Sized.new(crc_io, byte_size)\nbegin\n  yield chunk_type, sized_io, byte_size\nrescue e\n  PNG.debug(\"Chunk read error: #{e}\")\nend\ncrc_io.skip(sized_io.read_remaining)\ncrc32_expected = Bytes.new(4)\nio.read_fully(crc32_expected)\ncrc32_calculated = crc_io.final\nif crc32_expected != crc32_calculated\n  raise(CRCMismatch.new(\"Crc32 mismatch - expected: #{crc32_expected}, actual: #{crc32_calculated}\"))\nend\nchunk_type\n"}},{"html_id":"write(chunk_type:String,io:IO,data:Bytes)-class-method","name":"write","doc":"Write a chunk to the PNG stream\nEach chunk consists of\n- Length of data (UInt32)\n- Chunk type (String 4 chars)\n- Data (Bytes)\n- CRC32 chucksum (4 bytes)","summary":"<p>Write a chunk to the PNG stream Each chunk consists of - Length of data (UInt32) - Chunk type (String 4 chars) - Data (Bytes) - CRC32 chucksum (4 bytes)</p>","abstract":false,"args":[{"name":"chunk_type","external_name":"chunk_type","restriction":"String"},{"name":"io","external_name":"io","restriction":"IO"},{"name":"data","external_name":"data","restriction":"Bytes"}],"args_string":"(chunk_type : String, io : IO, data : Bytes)","args_html":"(chunk_type : String, io : IO, data : Bytes)","location":{"filename":"src/png/chunk.cr","line_number":44,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/chunk.cr#L44"},"def":{"name":"write","args":[{"name":"chunk_type","external_name":"chunk_type","restriction":"String"},{"name":"io","external_name":"io","restriction":"IO"},{"name":"data","external_name":"data","restriction":"Bytes"}],"visibility":"Public","body":"io.write_bytes(data.size.to_u32, IO::ByteFormat::BigEndian)\ncrc_io = IO::Digest.new(io, Digest::CRC32.new, IO::Digest::DigestMode::Write)\ncrc_io << chunk_type\ncrc_io.write(data)\nio.write(crc_io.final)\n"}},{"html_id":"write(chunk_type:String,io:IO,size:UInt32,&block:IO->Nil)-class-method","name":"write","doc":"Write a chunk to the PNG stream\nEach chunk consists of\n- Length of data (UInt32)\n- Chunk type (String 4 chars)\n- Data (Bytes)\n- CRC32 chucksum (4 bytes)","summary":"<p>Write a chunk to the PNG stream Each chunk consists of - Length of data (UInt32) - Chunk type (String 4 chars) - Data (Bytes) - CRC32 chucksum (4 bytes)</p>","abstract":false,"args":[{"name":"chunk_type","external_name":"chunk_type","restriction":"String"},{"name":"io","external_name":"io","restriction":"IO"},{"name":"size","external_name":"size","restriction":"UInt32"}],"args_string":"(chunk_type : String, io : IO, size : UInt32, &block : IO -> Nil)","args_html":"(chunk_type : String, io : IO, size : UInt32, &block : IO -> Nil)","location":{"filename":"src/png/chunk.cr","line_number":68,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/chunk.cr#L68"},"def":{"name":"write","args":[{"name":"chunk_type","external_name":"chunk_type","restriction":"String"},{"name":"io","external_name":"io","restriction":"IO"},{"name":"size","external_name":"size","restriction":"UInt32"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(IO -> Nil)"},"visibility":"Public","body":"io.write_bytes(size, IO::ByteFormat::BigEndian)\ncrc_io = IO::Digest.new(io, Digest::CRC32.new, IO::Digest::DigestMode::Write)\ncrc_io << chunk_type\nyield crc_io\nio.write(crc_io.final)\n"}},{"html_id":"write(chunk_type:String,io:IO,&block:IO->Nil)-class-method","name":"write","doc":"Write a chunk to the PNG stream\nEach chunk consists of\n- Length of data (UInt32)\n- Chunk type (String 4 chars)\n- Data (Bytes)\n- CRC32 chucksum (4 bytes)","summary":"<p>Write a chunk to the PNG stream Each chunk consists of - Length of data (UInt32) - Chunk type (String 4 chars) - Data (Bytes) - CRC32 chucksum (4 bytes)</p>","abstract":false,"args":[{"name":"chunk_type","external_name":"chunk_type","restriction":"String"},{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(chunk_type : String, io : IO, &block : IO -> Nil)","args_html":"(chunk_type : String, io : IO, &block : IO -> Nil)","location":{"filename":"src/png/chunk.cr","line_number":53,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/chunk.cr#L53"},"def":{"name":"write","args":[{"name":"chunk_type","external_name":"chunk_type","restriction":"String"},{"name":"io","external_name":"io","restriction":"IO"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(IO -> Nil)"},"visibility":"Public","body":"size_pos = io.pos\nio.write_bytes(0_u32)\ncrc_io = IO::Digest.new(io, Digest::CRC32.new, IO::Digest::DigestMode::Write)\ncrc_io << chunk_type\ndata_pos = io.pos\nyield crc_io\nsize = (io.pos - data_pos).to_u32\nio.seek(size_pos)\nio.write_bytes(size, IO::ByteFormat::BigEndian)\nio.seek(0, IO::Seek::End)\nio.write(crc_io.final)\n"}}],"constructors":[{"html_id":"new(chunk_type:String,io:IO::Sized)-class-method","name":"new","abstract":false,"args":[{"name":"chunk_type","external_name":"chunk_type","restriction":"::String"},{"name":"io","external_name":"io","restriction":"IO::Sized"}],"args_string":"(chunk_type : String, io : IO::Sized)","args_html":"(chunk_type : String, io : IO::Sized)","location":{"filename":"src/png/chunk.cr","line_number":79,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/chunk.cr#L79"},"def":{"name":"new","args":[{"name":"chunk_type","external_name":"chunk_type","restriction":"::String"},{"name":"io","external_name":"io","restriction":"IO::Sized"}],"visibility":"Public","body":"_ = allocate\n_.initialize(chunk_type, io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"write-instance-method","name":"write","abstract":false,"location":{"filename":"src/png/chunk.cr","line_number":84,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/chunk.cr#L84"},"def":{"name":"write","visibility":"Public","body":"self.class.write(@chunk_type, IO::Memory.new(@data))"}}],"types":[{"html_id":"png/PNG/Chunk/CRCMismatch","path":"PNG/Chunk/CRCMismatch.html","kind":"class","full_name":"PNG::Chunk::CRCMismatch","name":"CRCMismatch","abstract":false,"superclass":{"html_id":"png/PNG/Error","kind":"class","full_name":"PNG::Error","name":"Error"},"ancestors":[{"html_id":"png/PNG/Error","kind":"class","full_name":"PNG::Error","name":"Error"},{"html_id":"png/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/chunk.cr","line_number":6,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/chunk.cr#L6"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG/Chunk","kind":"class","full_name":"PNG::Chunk","name":"Chunk"}}]},{"html_id":"png/PNG/Color","path":"PNG/Color.html","kind":"struct","full_name":"PNG::Color(T, N)","name":"Color","abstract":true,"superclass":{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"png/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/colors.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L2"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"png/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"subclasses":[{"html_id":"png/PNG/Gray","kind":"struct","full_name":"PNG::Gray(T)","name":"Gray"},{"html_id":"png/PNG/GrayAlpha","kind":"struct","full_name":"PNG::GrayAlpha(T)","name":"GrayAlpha"},{"html_id":"png/PNG/HSV","kind":"struct","full_name":"PNG::HSV","name":"HSV"},{"html_id":"png/PNG/RGB","kind":"struct","full_name":"PNG::RGB(T)","name":"RGB"},{"html_id":"png/PNG/RGBA","kind":"struct","full_name":"PNG::RGBA(T)","name":"RGBA"}],"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"constructors":[{"html_id":"new(channels:StaticArray(T,N))-class-method","name":"new","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":"::StaticArray(T, N)"}],"args_string":"(channels : StaticArray(T, N))","args_html":"(channels : StaticArray(T, N))","location":{"filename":"src/png/colors.cr","line_number":14,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L14"},"def":{"name":"new","args":[{"name":"channels","external_name":"channels","restriction":"::StaticArray(T, N)"}],"visibility":"Public","body":"_ = Color(T, N).allocate\n_.initialize(channels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"==(other)-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs' instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/png/colors.cr","line_number":39,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L39"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"@channels == other.channels"}},{"html_id":"bytesize-instance-method","name":"bytesize","abstract":false,"location":{"filename":"src/png/colors.cr","line_number":21,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L21"},"def":{"name":"bytesize","visibility":"Public","body":"(sizeof(T)) * N"}},{"html_id":"channels-instance-method","name":"channels","abstract":false,"location":{"filename":"src/png/colors.cr","line_number":17,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L17"},"def":{"name":"channels","visibility":"Public","body":"N"}},{"html_id":"channels=(channels:StaticArray(T,N))-instance-method","name":"channels=","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":"StaticArray(T, N)"}],"args_string":"(channels : StaticArray(T, N))","args_html":"(channels : StaticArray(T, N))","location":{"filename":"src/png/colors.cr","line_number":4,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L4"},"def":{"name":"channels=","args":[{"name":"channels","external_name":"channels","restriction":"StaticArray(T, N)"}],"visibility":"Public","body":"@channels = channels"}},{"html_id":"each(&:UInt8->)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/png/colors.cr","line_number":29,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L29"},"def":{"name":"each","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(UInt8 ->)"},"visibility":"Public","body":"@channels.each do |c|\n  c = c.byte_swap\n  (sizeof(T)).times do\n    yield (c & 255).to_u8\n    c = c >> 8\n  end\nend"}},{"html_id":"to_slice-instance-method","name":"to_slice","abstract":false,"location":{"filename":"src/png/colors.cr","line_number":25,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L25"},"def":{"name":"to_slice","visibility":"Public","body":"@channels.to_slice"}}],"macros":[{"html_id":"[](*args)-macro","name":"[]","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args)","args_html":"(*args)","location":{"filename":"src/png/colors.cr","line_number":6,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L6"},"def":{"name":"[]","args":[{"name":"args","external_name":"args","restriction":""}],"splat_index":0,"visibility":"Public","body":"      \n{{ @type.name(generic_args: false) }}\n(typeof(\n{{ args.splat }}\n)).new(\n        \n{% for arg in args %}\n          {{ arg }},\n        {% end %}\n\n      )\n    \n"}},{"html_id":"define_channels(names)-macro","name":"define_channels","abstract":false,"args":[{"name":"names","external_name":"names","restriction":""}],"args_string":"(names)","args_html":"(names)","location":{"filename":"src/png/colors.cr","line_number":43,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors.cr#L43"},"def":{"name":"define_channels","args":[{"name":"names","external_name":"names","restriction":""}],"visibility":"Public","body":"      def self.[](\n{% for name in names %}{{ name }} : T, {% end %}\n)\n        \n{{ @type.name }}\n.new(\n{% for name in names %}{{ name }}, {% end %}\n)\n      \nend\n\n      def initialize(@channels)\n      \nend\n\n      def initialize(\n{% for name in names %}{{ name }} : T, {% end %}\n)\n        @channels = uninitialized T[N]\n        \n{% for name, index in names %}\n          @channels[{{ index }}] = {{ name }}\n        {% end %}\n\n      \nend\n\n      \n{% for name, index in names %}\n        def {{ name.id }}\n          @channels[{{ index }}]\n        end\n\n        def {{ name.id }}=(value : T)\n          @channels[{{ index }}] = value\n        end\n      {% end %}\n\n\n      \n{% for m, t in {u8: UInt8, u16: UInt16, u32: UInt32} %}\n        def to_{{ m }}\n          if T == {{ t }}\n            self\n          else\n            {{ @type.name(generic_args: false) }}({{ t }}).new(@channels.map { |c| {{ t }}.new((c / T::MAX) * {{ t }}::MAX) })\n          end\n        end\n      {% end %}\n\n\n      def to_s(io : IO)\n        io << \n{{ @type.name }}\n << '(' << @channels.join(\", \") << ')'\n      \nend\n    \n"}}]},{"html_id":"png/PNG/ColorType","path":"PNG/ColorType.html","kind":"enum","full_name":"PNG::ColorType","name":"ColorType","abstract":false,"ancestors":[{"html_id":"png/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"png/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/enums/color_type.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/color_type.cr#L2"}],"repository_name":"png","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Grayscale","name":"Grayscale","value":"0_u8"},{"id":"TrueColor","name":"TrueColor","value":"2_u8"},{"id":"Indexed","name":"Indexed","value":"3_u8"},{"id":"GrayscaleAlpha","name":"GrayscaleAlpha","value":"4_u8"},{"id":"TrueColorAlpha","name":"TrueColorAlpha","value":"6_u8"}],"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"instance_methods":[{"html_id":"channels-instance-method","name":"channels","doc":"Number of values required for the color type","summary":"<p>Number of values required for the color type</p>","abstract":false,"location":{"filename":"src/png/enums/color_type.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/color_type.cr#L10"},"def":{"name":"channels","visibility":"Public","body":"case self\nwhen Grayscale, Indexed\n  1_u8\nwhen GrayscaleAlpha\n  2_u8\nwhen TrueColor\n  3_u8\nwhen TrueColorAlpha\n  4_u8\nelse\n  raise(Error.new(\"Invalid color type #{self}\"))\nend"}},{"html_id":"grayscale?-instance-method","name":"grayscale?","abstract":false,"location":{"filename":"src/png/enums/color_type.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/color_type.cr#L3"},"def":{"name":"grayscale?","visibility":"Public","body":"self == Grayscale"}},{"html_id":"grayscale_alpha?-instance-method","name":"grayscale_alpha?","abstract":false,"location":{"filename":"src/png/enums/color_type.cr","line_number":6,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/color_type.cr#L6"},"def":{"name":"grayscale_alpha?","visibility":"Public","body":"self == GrayscaleAlpha"}},{"html_id":"indexed?-instance-method","name":"indexed?","abstract":false,"location":{"filename":"src/png/enums/color_type.cr","line_number":5,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/color_type.cr#L5"},"def":{"name":"indexed?","visibility":"Public","body":"self == Indexed"}},{"html_id":"true_color?-instance-method","name":"true_color?","abstract":false,"location":{"filename":"src/png/enums/color_type.cr","line_number":4,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/color_type.cr#L4"},"def":{"name":"true_color?","visibility":"Public","body":"self == TrueColor"}},{"html_id":"true_color_alpha?-instance-method","name":"true_color_alpha?","abstract":false,"location":{"filename":"src/png/enums/color_type.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/color_type.cr#L7"},"def":{"name":"true_color_alpha?","visibility":"Public","body":"self == TrueColorAlpha"}}]},{"html_id":"png/PNG/CompressionMethod","path":"PNG/CompressionMethod.html","kind":"enum","full_name":"PNG::CompressionMethod","name":"CompressionMethod","abstract":false,"ancestors":[{"html_id":"png/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"png/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/enums/compression_method.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/compression_method.cr#L3"}],"repository_name":"png","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Deflate","name":"Deflate","value":"0_u8"}],"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"doc":"In practice, the only compression method is deflate","summary":"<p>In practice, the only compression method is deflate</p>","instance_methods":[{"html_id":"deflate?-instance-method","name":"deflate?","abstract":false,"location":{"filename":"src/png/enums/compression_method.cr","line_number":4,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/compression_method.cr#L4"},"def":{"name":"deflate?","visibility":"Public","body":"self == Deflate"}}]},{"html_id":"png/PNG/Error","path":"PNG/Error.html","kind":"class","full_name":"PNG::Error","name":"Error","abstract":false,"superclass":{"html_id":"png/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"png/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/error.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/error.cr#L2"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"png/PNG/Chunk/CRCMismatch","kind":"class","full_name":"PNG::Chunk::CRCMismatch","name":"CRCMismatch"}],"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"}},{"html_id":"png/PNG/FilterMethod","path":"PNG/FilterMethod.html","kind":"enum","full_name":"PNG::FilterMethod","name":"FilterMethod","abstract":false,"ancestors":[{"html_id":"png/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"png/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/enums/filter_method.cr","line_number":4,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/filter_method.cr#L4"}],"repository_name":"png","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"None","name":"None","value":"0_u8"},{"id":"Sub","name":"Sub","value":"1_u8"},{"id":"Up","name":"Up","value":"2_u8"},{"id":"Average","name":"Average","value":"3_u8"},{"id":"Paeth","name":"Paeth","value":"4_u8"}],"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"doc":"Per scanline filtermethod\n","summary":"<p>Per scanline filtermethod</p>","instance_methods":[{"html_id":"average?-instance-method","name":"average?","abstract":false,"location":{"filename":"src/png/enums/filter_method.cr","line_number":8,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/filter_method.cr#L8"},"def":{"name":"average?","visibility":"Public","body":"self == Average"}},{"html_id":"none?-instance-method","name":"none?","abstract":false,"location":{"filename":"src/png/enums/filter_method.cr","line_number":5,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/filter_method.cr#L5"},"def":{"name":"none?","visibility":"Public","body":"self == None"}},{"html_id":"paeth?-instance-method","name":"paeth?","abstract":false,"location":{"filename":"src/png/enums/filter_method.cr","line_number":9,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/filter_method.cr#L9"},"def":{"name":"paeth?","visibility":"Public","body":"self == Paeth"}},{"html_id":"sub?-instance-method","name":"sub?","abstract":false,"location":{"filename":"src/png/enums/filter_method.cr","line_number":6,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/filter_method.cr#L6"},"def":{"name":"sub?","visibility":"Public","body":"self == Sub"}},{"html_id":"up?-instance-method","name":"up?","abstract":false,"location":{"filename":"src/png/enums/filter_method.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/filter_method.cr#L7"},"def":{"name":"up?","visibility":"Public","body":"self == Up"}}]},{"html_id":"png/PNG/FilterType","path":"PNG/FilterType.html","kind":"enum","full_name":"PNG::FilterType","name":"FilterType","abstract":false,"ancestors":[{"html_id":"png/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"png/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/enums/filter_type.cr","line_number":4,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/filter_type.cr#L4"}],"repository_name":"png","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Adaptive","name":"Adaptive","value":"0_u8"}],"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"doc":"Only Adaptive is supported by the PNG Format\n","summary":"<p>Only Adaptive is supported by the PNG Format</p>","instance_methods":[{"html_id":"adaptive?-instance-method","name":"adaptive?","abstract":false,"location":{"filename":"src/png/enums/filter_type.cr","line_number":5,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/filter_type.cr#L5"},"def":{"name":"adaptive?","visibility":"Public","body":"self == Adaptive"}}]},{"html_id":"png/PNG/Gray","path":"PNG/Gray.html","kind":"struct","full_name":"PNG::Gray(T)","name":"Gray","abstract":false,"superclass":{"html_id":"png/PNG/Color","kind":"struct","full_name":"PNG::Color","name":"Color"},"ancestors":[{"html_id":"png/PNG/Color","kind":"struct","full_name":"PNG::Color","name":"Color"},{"html_id":"png/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/colors/gray.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L2"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"class_methods":[{"html_id":"[](g:T)-class-method","name":"[]","abstract":false,"args":[{"name":"g","external_name":"g","restriction":"T"}],"args_string":"(g : T)","args_html":"(g : T)","location":{"filename":"src/png/colors/gray.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L7"},"def":{"name":"[]","args":[{"name":"g","external_name":"g","restriction":"T"}],"visibility":"Public","body":"PNG::Gray(T).new(g)"}},{"html_id":"color_type-class-method","name":"color_type","abstract":false,"location":{"filename":"src/png/colors/gray.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L3"},"def":{"name":"color_type","visibility":"Public","body":"ColorType::Grayscale"}}],"constructors":[{"html_id":"new(g:T)-class-method","name":"new","abstract":false,"args":[{"name":"g","external_name":"g","restriction":"T"}],"args_string":"(g : T)","args_html":"(g : T)","location":{"filename":"src/png/colors/gray.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L7"},"def":{"name":"new","args":[{"name":"g","external_name":"g","restriction":"T"}],"visibility":"Public","body":"_ = Gray(T).allocate\n_.initialize(g)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(channels)-class-method","name":"new","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":""}],"args_string":"(channels)","args_html":"(channels)","location":{"filename":"src/png/colors/gray.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L7"},"def":{"name":"new","args":[{"name":"channels","external_name":"channels","restriction":""}],"visibility":"Public","body":"_ = Gray(T).allocate\n_.initialize(channels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"g-instance-method","name":"g","abstract":false,"location":{"filename":"src/png/colors/gray.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L7"},"def":{"name":"g","visibility":"Public","body":"@channels[0]"}},{"html_id":"g=(value:T)-instance-method","name":"g=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/gray.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L7"},"def":{"name":"g=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[0] = value"}},{"html_id":"to_rgb8-instance-method","name":"to_rgb8","abstract":false,"location":{"filename":"src/png/colors/gray.cr","line_number":9,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L9"},"def":{"name":"to_rgb8","visibility":"Public","body":"v = UInt8.new(((g / T::MAX) * UInt8::MAX))\nRGB(UInt8).new(v, v, v)\n"}},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/png/colors/gray.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L7"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"(((io << PNG::Gray(T)) << '(') << (@channels.join(\", \"))) << ')'"}},{"html_id":"to_u16-instance-method","name":"to_u16","abstract":false,"location":{"filename":"src/png/colors/gray.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L7"},"def":{"name":"to_u16","visibility":"Public","body":"if T == UInt16\n  self\nelse\n  PNG::Gray(UInt16).new(@channels.map do |c|\n    UInt16.new((c / T::MAX) * UInt16::MAX)\n  end)\nend"}},{"html_id":"to_u32-instance-method","name":"to_u32","abstract":false,"location":{"filename":"src/png/colors/gray.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L7"},"def":{"name":"to_u32","visibility":"Public","body":"if T == UInt32\n  self\nelse\n  PNG::Gray(UInt32).new(@channels.map do |c|\n    UInt32.new((c / T::MAX) * UInt32::MAX)\n  end)\nend"}},{"html_id":"to_u8-instance-method","name":"to_u8","abstract":false,"location":{"filename":"src/png/colors/gray.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray.cr#L7"},"def":{"name":"to_u8","visibility":"Public","body":"if T == UInt8\n  self\nelse\n  PNG::Gray(UInt8).new(@channels.map do |c|\n    UInt8.new((c / T::MAX) * UInt8::MAX)\n  end)\nend"}}]},{"html_id":"png/PNG/GrayAlpha","path":"PNG/GrayAlpha.html","kind":"struct","full_name":"PNG::GrayAlpha(T)","name":"GrayAlpha","abstract":false,"superclass":{"html_id":"png/PNG/Color","kind":"struct","full_name":"PNG::Color","name":"Color"},"ancestors":[{"html_id":"png/PNG/Color","kind":"struct","full_name":"PNG::Color","name":"Color"},{"html_id":"png/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/colors/gray_alpha.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L2"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"class_methods":[{"html_id":"[](g:T,a:T)-class-method","name":"[]","abstract":false,"args":[{"name":"g","external_name":"g","restriction":"T"},{"name":"a","external_name":"a","restriction":"T"}],"args_string":"(g : T, a : T)","args_html":"(g : T, a : T)","location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"[]","args":[{"name":"g","external_name":"g","restriction":"T"},{"name":"a","external_name":"a","restriction":"T"}],"visibility":"Public","body":"PNG::GrayAlpha(T).new(g, a)"}},{"html_id":"color_type-class-method","name":"color_type","abstract":false,"location":{"filename":"src/png/colors/gray_alpha.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L3"},"def":{"name":"color_type","visibility":"Public","body":"ColorType::GrayscaleAlpha"}}],"constructors":[{"html_id":"new(g:T,a:T)-class-method","name":"new","abstract":false,"args":[{"name":"g","external_name":"g","restriction":"T"},{"name":"a","external_name":"a","restriction":"T"}],"args_string":"(g : T, a : T)","args_html":"(g : T, a : T)","location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"new","args":[{"name":"g","external_name":"g","restriction":"T"},{"name":"a","external_name":"a","restriction":"T"}],"visibility":"Public","body":"_ = GrayAlpha(T).allocate\n_.initialize(g, a)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(channels)-class-method","name":"new","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":""}],"args_string":"(channels)","args_html":"(channels)","location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"new","args":[{"name":"channels","external_name":"channels","restriction":""}],"visibility":"Public","body":"_ = GrayAlpha(T).allocate\n_.initialize(channels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"a-instance-method","name":"a","abstract":false,"location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"a","visibility":"Public","body":"@channels[1]"}},{"html_id":"a=(value:T)-instance-method","name":"a=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"a=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[1] = value"}},{"html_id":"g-instance-method","name":"g","abstract":false,"location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"g","visibility":"Public","body":"@channels[0]"}},{"html_id":"g=(value:T)-instance-method","name":"g=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"g=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[0] = value"}},{"html_id":"to_rgb8-instance-method","name":"to_rgb8","abstract":false,"location":{"filename":"src/png/colors/gray_alpha.cr","line_number":9,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L9"},"def":{"name":"to_rgb8","visibility":"Public","body":"alpha = (a / T::MAX)\nv = UInt8.new(((g / T::MAX) * alpha) * UInt8::MAX)\nRGB(UInt8).new(v, v, v)\n"}},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"(((io << PNG::GrayAlpha(T)) << '(') << (@channels.join(\", \"))) << ')'"}},{"html_id":"to_u16-instance-method","name":"to_u16","abstract":false,"location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"to_u16","visibility":"Public","body":"if T == UInt16\n  self\nelse\n  PNG::GrayAlpha(UInt16).new(@channels.map do |c|\n    UInt16.new((c / T::MAX) * UInt16::MAX)\n  end)\nend"}},{"html_id":"to_u32-instance-method","name":"to_u32","abstract":false,"location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"to_u32","visibility":"Public","body":"if T == UInt32\n  self\nelse\n  PNG::GrayAlpha(UInt32).new(@channels.map do |c|\n    UInt32.new((c / T::MAX) * UInt32::MAX)\n  end)\nend"}},{"html_id":"to_u8-instance-method","name":"to_u8","abstract":false,"location":{"filename":"src/png/colors/gray_alpha.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/gray_alpha.cr#L7"},"def":{"name":"to_u8","visibility":"Public","body":"if T == UInt8\n  self\nelse\n  PNG::GrayAlpha(UInt8).new(@channels.map do |c|\n    UInt8.new((c / T::MAX) * UInt8::MAX)\n  end)\nend"}}]},{"html_id":"png/PNG/Header","path":"PNG/Header.html","kind":"struct","full_name":"PNG::Header","name":"Header","abstract":false,"superclass":{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/header.cr","line_number":5,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L5"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"class_methods":[{"html_id":"parse(io:IO)-class-method","name":"parse","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/png/header.cr","line_number":16,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L16"},"def":{"name":"parse","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"new(width: io.read_bytes(UInt32, IO::ByteFormat::BigEndian), height: io.read_bytes(UInt32, IO::ByteFormat::BigEndian), bit_depth: io.read_bytes(UInt8), color_type: ColorType.new(io.read_bytes(UInt8)), compression_method: CompressionMethod.new(io.read_bytes(UInt8)), filter_type: FilterType.new(io.read_bytes(UInt8)), interlacing: Interlacing.new(io.read_bytes(UInt8)))"}}],"constructors":[{"html_id":"new(width:UInt32,height:UInt32,bit_depth:UInt8=8_u8,color_type:PNG::ColorType=ColorType::TrueColor,compression_method:PNG::CompressionMethod=CompressionMethod::Deflate,filter_type:PNG::FilterType=FilterType::Adaptive,interlacing:PNG::Interlacing=Interlacing::None)-class-method","name":"new","abstract":false,"args":[{"name":"width","external_name":"width","restriction":"::UInt32"},{"name":"height","external_name":"height","restriction":"::UInt32"},{"name":"bit_depth","default_value":"8_u8","external_name":"bit_depth","restriction":"::UInt8"},{"name":"color_type","default_value":"ColorType::TrueColor","external_name":"color_type","restriction":"::PNG::ColorType"},{"name":"compression_method","default_value":"CompressionMethod::Deflate","external_name":"compression_method","restriction":"::PNG::CompressionMethod"},{"name":"filter_type","default_value":"FilterType::Adaptive","external_name":"filter_type","restriction":"::PNG::FilterType"},{"name":"interlacing","default_value":"Interlacing::None","external_name":"interlacing","restriction":"::PNG::Interlacing"}],"args_string":"(width : UInt32, height : UInt32, bit_depth : UInt8 = 8_u8, color_type : PNG::ColorType = ColorType::TrueColor, compression_method : PNG::CompressionMethod = CompressionMethod::Deflate, filter_type : PNG::FilterType = FilterType::Adaptive, interlacing : PNG::Interlacing = Interlacing::None)","args_html":"(width : UInt32, height : UInt32, bit_depth : UInt8 = <span class=\"n\">8_u8</span>, color_type : <a href=\"../PNG/ColorType.html\">PNG::ColorType</a> = <span class=\"t\">ColorType</span><span class=\"t\">::</span><span class=\"t\">TrueColor</span>, compression_method : <a href=\"../PNG/CompressionMethod.html\">PNG::CompressionMethod</a> = <span class=\"t\">CompressionMethod</span><span class=\"t\">::</span><span class=\"t\">Deflate</span>, filter_type : <a href=\"../PNG/FilterType.html\">PNG::FilterType</a> = <span class=\"t\">FilterType</span><span class=\"t\">::</span><span class=\"t\">Adaptive</span>, interlacing : <a href=\"../PNG/Interlacing.html\">PNG::Interlacing</a> = <span class=\"t\">Interlacing</span><span class=\"t\">::</span><span class=\"t\">None</span>)","location":{"filename":"src/png/header.cr","line_number":28,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L28"},"def":{"name":"new","args":[{"name":"width","external_name":"width","restriction":"::UInt32"},{"name":"height","external_name":"height","restriction":"::UInt32"},{"name":"bit_depth","default_value":"8_u8","external_name":"bit_depth","restriction":"::UInt8"},{"name":"color_type","default_value":"ColorType::TrueColor","external_name":"color_type","restriction":"::PNG::ColorType"},{"name":"compression_method","default_value":"CompressionMethod::Deflate","external_name":"compression_method","restriction":"::PNG::CompressionMethod"},{"name":"filter_type","default_value":"FilterType::Adaptive","external_name":"filter_type","restriction":"::PNG::FilterType"},{"name":"interlacing","default_value":"Interlacing::None","external_name":"interlacing","restriction":"::PNG::Interlacing"}],"visibility":"Public","body":"_ = allocate\n_.initialize(width, height, bit_depth, color_type, compression_method, filter_type, interlacing)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"bit_depth:UInt8-instance-method","name":"bit_depth","abstract":false,"location":{"filename":"src/png/header.cr","line_number":8,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L8"},"def":{"name":"bit_depth","return_type":"UInt8","visibility":"Public","body":"@bit_depth"}},{"html_id":"bit_depth=(bit_depth:UInt8)-instance-method","name":"bit_depth=","abstract":false,"args":[{"name":"bit_depth","external_name":"bit_depth","restriction":"UInt8"}],"args_string":"(bit_depth : UInt8)","args_html":"(bit_depth : UInt8)","location":{"filename":"src/png/header.cr","line_number":8,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L8"},"def":{"name":"bit_depth=","args":[{"name":"bit_depth","external_name":"bit_depth","restriction":"UInt8"}],"visibility":"Public","body":"@bit_depth = bit_depth"}},{"html_id":"bits_per_pixel:UInt32-instance-method","name":"bits_per_pixel","doc":"Number of bits to represent a pixel. Ex: 4bits @ rgb color would be `4 * 3 = 12`","summary":"<p>Number of bits to represent a pixel.</p>","abstract":false,"location":{"filename":"src/png/header.cr","line_number":41,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L41"},"def":{"name":"bits_per_pixel","return_type":"UInt32","visibility":"Public","body":"@color_type.channels.to_u32 * @bit_depth.to_u32"}},{"html_id":"byte_size-instance-method","name":"byte_size","doc":"Total bytesize including row padding, not including filter bytes","summary":"<p>Total bytesize including row padding, not including filter bytes</p>","abstract":false,"location":{"filename":"src/png/header.cr","line_number":57,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L57"},"def":{"name":"byte_size","visibility":"Public","body":"bytes_per_row * height"}},{"html_id":"bytes_per_pixel:UInt8-instance-method","name":"bytes_per_pixel","doc":"Number of bytes to represent a pixel. Ex: 4bits @ rgb color would be `ceil((4 * 3) / 8) = 2`\nThis includes extra padding.","summary":"<p>Number of bytes to represent a pixel.</p>","abstract":false,"location":{"filename":"src/png/header.cr","line_number":47,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L47"},"def":{"name":"bytes_per_pixel","return_type":"UInt8","visibility":"Public","body":"((@color_type.channels * (@bit_depth / 8)).clamp(1..)).ceil.to_u8"}},{"html_id":"bytes_per_row(width:Int=@width)-instance-method","name":"bytes_per_row","doc":"Row size including padding where bit depth doesn't align to bytes. Not including filter byte.","summary":"<p>Row size including padding where bit depth doesn't align to bytes.</p>","abstract":false,"args":[{"name":"width","default_value":"@width","external_name":"width","restriction":"Int"}],"args_string":"(width : Int = @width)","args_html":"(width : Int = @width)","location":{"filename":"src/png/header.cr","line_number":52,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L52"},"def":{"name":"bytes_per_row","args":[{"name":"width","default_value":"@width","external_name":"width","restriction":"Int"}],"visibility":"Public","body":"((bits_per_pixel * width) / 8).ceil.to_u32"}},{"html_id":"channels(*args,**options)-instance-method","name":"channels","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/header.cr","line_number":14,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L14"},"def":{"name":"channels","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@color_type.channels(*args, **options)"}},{"html_id":"channels(*args,**options,&)-instance-method","name":"channels","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/header.cr","line_number":14,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L14"},"def":{"name":"channels","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@color_type.channels(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"color_type:ColorType-instance-method","name":"color_type","abstract":false,"location":{"filename":"src/png/header.cr","line_number":9,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L9"},"def":{"name":"color_type","return_type":"ColorType","visibility":"Public","body":"@color_type"}},{"html_id":"color_type=(color_type:ColorType)-instance-method","name":"color_type=","abstract":false,"args":[{"name":"color_type","external_name":"color_type","restriction":"ColorType"}],"args_string":"(color_type : ColorType)","args_html":"(color_type : <a href=\"../PNG/ColorType.html\">ColorType</a>)","location":{"filename":"src/png/header.cr","line_number":9,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L9"},"def":{"name":"color_type=","args":[{"name":"color_type","external_name":"color_type","restriction":"ColorType"}],"visibility":"Public","body":"@color_type = color_type"}},{"html_id":"colorize(colors:Bytes,palette:Bytes|Nil=nil)-instance-method","name":"colorize","doc":"Convert bytes into a color struct","summary":"<p>Convert bytes into a color struct</p>","abstract":false,"args":[{"name":"colors","external_name":"colors","restriction":"Bytes"},{"name":"palette","default_value":"nil","external_name":"palette","restriction":"Bytes | ::Nil"}],"args_string":"(colors : Bytes, palette : Bytes | Nil = nil)","args_html":"(colors : Bytes, palette : Bytes | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/png/header.cr","line_number":62,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L62"},"def":{"name":"colorize","args":[{"name":"colors","external_name":"colors","restriction":"Bytes"},{"name":"palette","default_value":"nil","external_name":"palette","restriction":"Bytes | ::Nil"}],"visibility":"Public","body":"if bit_depth < 8 && (!color_type.indexed?)\n  shift = 8_u8 - bit_depth\n  max = UInt8::MAX >> shift\n  colors = colors.map do |c|\n    UInt8.new((c / max) * UInt8::MAX)\n  end\nend\nif bit_depth == 16\n  colors = (colors.each_slice(2)).map do |__temp_49|\n    b0, b1 = __temp_49\n    (b0.to_u16 << 8) | b1\n  end.to_a.as(Array(UInt16))\n  case color_type\n  when .grayscale?\n    Gray(UInt16).new(colors[0])\n  when .grayscale_alpha?\n    GrayAlpha(UInt16).new(colors[0], colors[1])\n  when .true_color?\n    RGB(UInt16).new(colors[0], colors[1], colors[2])\n  when .true_color_alpha?\n    RGBA(UInt16).new(colors[0], colors[1], colors[2], colors[3])\n  else\n    raise(Error.new(\"Invalid color type: #{color_type} for #{bit_depth} bits\"))\n  end\nelse\n  colors = colors.as(Slice(UInt8))\n  case color_type\n  when .indexed?\n    if p = palette\n      p_index = colors[0].to_u32 * 3\n      r, g, b = palette[p_index..(p_index + 2)]\n      RGB(UInt8).new(r, g, b)\n    else\n      raise(Error.new(\"Palette required for indexed images\"))\n    end\n  when .grayscale?\n    Gray(UInt8).new(colors[0])\n  when .grayscale_alpha?\n    GrayAlpha(UInt8).new(colors[0], colors[1])\n  when .true_color?\n    RGB(UInt8).new(colors[0], colors[1], colors[2])\n  when .true_color_alpha?\n    RGBA(UInt8).new(colors[0], colors[1], colors[2], colors[3])\n  else\n    raise(Error.new(\"Invalid color type: #{color_type} for #{bit_depth} bits\"))\n  end\nend\n"}},{"html_id":"compression_method:CompressionMethod-instance-method","name":"compression_method","abstract":false,"location":{"filename":"src/png/header.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L10"},"def":{"name":"compression_method","return_type":"CompressionMethod","visibility":"Public","body":"@compression_method"}},{"html_id":"compression_method=(compression_method:CompressionMethod)-instance-method","name":"compression_method=","abstract":false,"args":[{"name":"compression_method","external_name":"compression_method","restriction":"CompressionMethod"}],"args_string":"(compression_method : CompressionMethod)","args_html":"(compression_method : <a href=\"../PNG/CompressionMethod.html\">CompressionMethod</a>)","location":{"filename":"src/png/header.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L10"},"def":{"name":"compression_method=","args":[{"name":"compression_method","external_name":"compression_method","restriction":"CompressionMethod"}],"visibility":"Public","body":"@compression_method = compression_method"}},{"html_id":"filter_type:FilterType-instance-method","name":"filter_type","abstract":false,"location":{"filename":"src/png/header.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L11"},"def":{"name":"filter_type","return_type":"FilterType","visibility":"Public","body":"@filter_type"}},{"html_id":"filter_type=(filter_type:FilterType)-instance-method","name":"filter_type=","abstract":false,"args":[{"name":"filter_type","external_name":"filter_type","restriction":"FilterType"}],"args_string":"(filter_type : FilterType)","args_html":"(filter_type : <a href=\"../PNG/FilterType.html\">FilterType</a>)","location":{"filename":"src/png/header.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L11"},"def":{"name":"filter_type=","args":[{"name":"filter_type","external_name":"filter_type","restriction":"FilterType"}],"visibility":"Public","body":"@filter_type = filter_type"}},{"html_id":"height:UInt32-instance-method","name":"height","abstract":false,"location":{"filename":"src/png/header.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L7"},"def":{"name":"height","return_type":"UInt32","visibility":"Public","body":"@height"}},{"html_id":"height=(height:UInt32)-instance-method","name":"height=","abstract":false,"args":[{"name":"height","external_name":"height","restriction":"UInt32"}],"args_string":"(height : UInt32)","args_html":"(height : UInt32)","location":{"filename":"src/png/header.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L7"},"def":{"name":"height=","args":[{"name":"height","external_name":"height","restriction":"UInt32"}],"visibility":"Public","body":"@height = height"}},{"html_id":"interlacing:Interlacing-instance-method","name":"interlacing","abstract":false,"location":{"filename":"src/png/header.cr","line_number":12,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L12"},"def":{"name":"interlacing","return_type":"Interlacing","visibility":"Public","body":"@interlacing"}},{"html_id":"interlacing=(interlacing:Interlacing)-instance-method","name":"interlacing=","abstract":false,"args":[{"name":"interlacing","external_name":"interlacing","restriction":"Interlacing"}],"args_string":"(interlacing : Interlacing)","args_html":"(interlacing : <a href=\"../PNG/Interlacing.html\">Interlacing</a>)","location":{"filename":"src/png/header.cr","line_number":12,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L12"},"def":{"name":"interlacing=","args":[{"name":"interlacing","external_name":"interlacing","restriction":"Interlacing"}],"visibility":"Public","body":"@interlacing = interlacing"}},{"html_id":"width:UInt32-instance-method","name":"width","abstract":false,"location":{"filename":"src/png/header.cr","line_number":6,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L6"},"def":{"name":"width","return_type":"UInt32","visibility":"Public","body":"@width"}},{"html_id":"width=(width:UInt32)-instance-method","name":"width=","abstract":false,"args":[{"name":"width","external_name":"width","restriction":"UInt32"}],"args_string":"(width : UInt32)","args_html":"(width : UInt32)","location":{"filename":"src/png/header.cr","line_number":6,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L6"},"def":{"name":"width=","args":[{"name":"width","external_name":"width","restriction":"UInt32"}],"visibility":"Public","body":"@width = width"}},{"html_id":"write(io:IO)-instance-method","name":"write","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/png/header.cr","line_number":102,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/header.cr#L102"},"def":{"name":"write","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"Chunk.write(\"IHDR\", io, 13) do |data|\n  data.write_bytes(@width, IO::ByteFormat::BigEndian)\n  data.write_bytes(@height, IO::ByteFormat::BigEndian)\n  data.write_byte(@bit_depth)\n  data.write_byte(@color_type.value)\n  data.write_byte(@compression_method.value)\n  data.write_byte(@filter_type.value)\n  data.write_byte(@interlacing.value)\nend"}}]},{"html_id":"png/PNG/HSV","path":"PNG/HSV.html","kind":"struct","full_name":"PNG::HSV","name":"HSV","abstract":false,"superclass":{"html_id":"png/PNG/Color","kind":"struct","full_name":"PNG::Color","name":"Color"},"ancestors":[{"html_id":"png/PNG/Color","kind":"struct","full_name":"PNG::Color","name":"Color"},{"html_id":"png/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/colors/hsv.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L2"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"class_methods":[{"html_id":"[](h:T,s:T,v:T)-class-method","name":"[]","abstract":false,"args":[{"name":"h","external_name":"h","restriction":"T"},{"name":"s","external_name":"s","restriction":"T"},{"name":"v","external_name":"v","restriction":"T"}],"args_string":"(h : T, s : T, v : T)","args_html":"(h : T, s : T, v : T)","location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"[]","args":[{"name":"h","external_name":"h","restriction":"T"},{"name":"s","external_name":"s","restriction":"T"},{"name":"v","external_name":"v","restriction":"T"}],"visibility":"Public","body":"PNG::HSV.new(h, s, v)"}}],"constructors":[{"html_id":"new(h:T,s:T,v:T)-class-method","name":"new","abstract":false,"args":[{"name":"h","external_name":"h","restriction":"T"},{"name":"s","external_name":"s","restriction":"T"},{"name":"v","external_name":"v","restriction":"T"}],"args_string":"(h : T, s : T, v : T)","args_html":"(h : T, s : T, v : T)","location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"new","args":[{"name":"h","external_name":"h","restriction":"T"},{"name":"s","external_name":"s","restriction":"T"},{"name":"v","external_name":"v","restriction":"T"}],"visibility":"Public","body":"_ = allocate\n_.initialize(h, s, v)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(channels)-class-method","name":"new","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":""}],"args_string":"(channels)","args_html":"(channels)","location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"new","args":[{"name":"channels","external_name":"channels","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(channels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"h-instance-method","name":"h","abstract":false,"location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"h","visibility":"Public","body":"@channels[0]"}},{"html_id":"h=(value:T)-instance-method","name":"h=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"h=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[0] = value"}},{"html_id":"s-instance-method","name":"s","abstract":false,"location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"s","visibility":"Public","body":"@channels[1]"}},{"html_id":"s=(value:T)-instance-method","name":"s=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"s=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[1] = value"}},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"(((io << PNG::HSV) << '(') << (@channels.join(\", \"))) << ')'"}},{"html_id":"to_u16-instance-method","name":"to_u16","abstract":false,"location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"to_u16","visibility":"Public","body":"if T == UInt16\n  self\nelse\n  PNG::HSV(UInt16).new(@channels.map do |c|\n    UInt16.new((c / T::MAX) * UInt16::MAX)\n  end)\nend"}},{"html_id":"to_u32-instance-method","name":"to_u32","abstract":false,"location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"to_u32","visibility":"Public","body":"if T == UInt32\n  self\nelse\n  PNG::HSV(UInt32).new(@channels.map do |c|\n    UInt32.new((c / T::MAX) * UInt32::MAX)\n  end)\nend"}},{"html_id":"to_u8-instance-method","name":"to_u8","abstract":false,"location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"to_u8","visibility":"Public","body":"if T == UInt8\n  self\nelse\n  PNG::HSV(UInt8).new(@channels.map do |c|\n    UInt8.new((c / T::MAX) * UInt8::MAX)\n  end)\nend"}},{"html_id":"v-instance-method","name":"v","abstract":false,"location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"v","visibility":"Public","body":"@channels[2]"}},{"html_id":"v=(value:T)-instance-method","name":"v=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/hsv.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/hsv.cr#L3"},"def":{"name":"v=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[2] = value"}}]},{"html_id":"png/PNG/Inflater","path":"PNG/Inflater.html","kind":"class","full_name":"PNG::Inflater","name":"Inflater","abstract":false,"superclass":{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/inflater.cr","line_number":8,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/inflater.cr#L8"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"doc":"Acts as a byte-by-byte inflater for IDAT payloads\nUseful for decompressing as data is available.","summary":"<p>Acts as a byte-by-byte inflater for IDAT payloads Useful for decompressing as data is available.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/png/inflater.cr","line_number":39,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/inflater.cr#L39"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"bytes_available-instance-method","name":"bytes_available","abstract":false,"location":{"filename":"src/png/inflater.cr","line_number":96,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/inflater.cr#L96"},"def":{"name":"bytes_available","visibility":"Public","body":"@output.size"}},{"html_id":"ended?:Bool-instance-method","name":"ended?","abstract":false,"location":{"filename":"src/png/inflater.cr","line_number":37,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/inflater.cr#L37"},"def":{"name":"ended?","visibility":"Public","body":"@ended"}},{"html_id":"inhale(byte:UInt8)-instance-method","name":"inhale","abstract":false,"args":[{"name":"byte","external_name":"byte","restriction":"UInt8"}],"args_string":"(byte : UInt8)","args_html":"(byte : UInt8)","location":{"filename":"src/png/inflater.cr","line_number":51,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/inflater.cr#L51"},"def":{"name":"inhale","args":[{"name":"byte","external_name":"byte","restriction":"UInt8"}],"visibility":"Public","body":"if ended?\n  return\nend\nif @header_bytes < 2\n  @header_bytes = @header_bytes + 1\n  return\nend\n@input.write_byte(byte)\nwhile @input.size > 0\n  @stream.avail_in = @input.size.to_u32\n  @stream.next_in = @input.buffer\n  @stream.avail_out = @out_buffer.size\n  @stream.next_out = (pointerof(@out_buffer)).as(Pointer(UInt8))\n  ret = LibZ.inflate(pointerof(@stream), LibZ::Flush::NO_FLUSH)\n  case ret\n  when .stream_end?\n    @ended = true\n  when .buf_error?, .data_error?, .errno?, .mem_error?, .version_error?\n    raise(Error.new(ret, @stream))\n  when .need_dict?\n    raise(Error.new(\"Predefined dict not supported\"))\n  end\n  input_bytes_read = @input.size - @stream.avail_in\n  @input.trim(input_bytes_read)\n  bytes_read = @out_buffer.size - @stream.avail_out\n  if bytes_read == 0\n    break\n  end\n  bytes_read.times do |n|\n    @output.write_byte(@out_buffer[n])\n  end\nend\n"}},{"html_id":"read(slice:Bytes)-instance-method","name":"read","abstract":false,"args":[{"name":"slice","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","args_html":"(slice : Bytes)","location":{"filename":"src/png/inflater.cr","line_number":86,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/inflater.cr#L86"},"def":{"name":"read","args":[{"name":"slice","external_name":"slice","restriction":"Bytes"}],"visibility":"Public","body":"if @output.size < slice.size\n  return 0\nend\n@output.pos = 0\n@output.read(slice)\n@output.trim(slice.size)\n@output.seek(@output.size)\nslice.size\n"}}],"types":[{"html_id":"png/PNG/Inflater/Error","path":"PNG/Inflater/Error.html","kind":"class","full_name":"PNG::Inflater::Error","name":"Error","abstract":false,"superclass":{"html_id":"png/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"png/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/inflater.cr","line_number":19,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/inflater.cr#L19"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG/Inflater","kind":"class","full_name":"PNG::Inflater","name":"Inflater"},"constructors":[{"html_id":"new(ret,stream)-class-method","name":"new","abstract":false,"args":[{"name":"ret","external_name":"ret","restriction":""},{"name":"stream","external_name":"stream","restriction":""}],"args_string":"(ret, stream)","args_html":"(ret, stream)","location":{"filename":"src/png/inflater.cr","line_number":24,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/inflater.cr#L24"},"def":{"name":"new","args":[{"name":"ret","external_name":"ret","restriction":""},{"name":"stream","external_name":"stream","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(ret, stream)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(msg:String)-class-method","name":"new","abstract":false,"args":[{"name":"msg","external_name":"msg","restriction":"String"}],"args_string":"(msg : String)","args_html":"(msg : String)","location":{"filename":"src/png/inflater.cr","line_number":20,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/inflater.cr#L20"},"def":{"name":"new","args":[{"name":"msg","external_name":"msg","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(msg)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]}]},{"html_id":"png/PNG/Interlacing","path":"PNG/Interlacing.html","kind":"enum","full_name":"PNG::Interlacing","name":"Interlacing","abstract":false,"ancestors":[{"html_id":"png/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"png/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/enums/interlacing.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/interlacing.cr#L2"}],"repository_name":"png","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"None","name":"None","value":"0_u8"},{"id":"Adam7","name":"Adam7","value":"1_u8"}],"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"instance_methods":[{"html_id":"adam7?-instance-method","name":"adam7?","abstract":false,"location":{"filename":"src/png/enums/interlacing.cr","line_number":4,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/interlacing.cr#L4"},"def":{"name":"adam7?","visibility":"Public","body":"self == Adam7"}},{"html_id":"none?-instance-method","name":"none?","abstract":false,"location":{"filename":"src/png/enums/interlacing.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/enums/interlacing.cr#L3"},"def":{"name":"none?","visibility":"Public","body":"self == None"}}]},{"html_id":"png/PNG/Parser","path":"PNG/Parser.html","kind":"class","full_name":"PNG::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/parser.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L2"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PASSES","name":"PASSES","value":"[{start_x: 0_u32, start_y: 0_u32, each_x: 8_u32, each_y: 8_u32}, {start_x: 4_u32, start_y: 0_u32, each_x: 8_u32, each_y: 8_u32}, {start_x: 0_u32, start_y: 4_u32, each_x: 4_u32, each_y: 8_u32}, {start_x: 2_u32, start_y: 0_u32, each_x: 4_u32, each_y: 4_u32}, {start_x: 0_u32, start_y: 2_u32, each_x: 2_u32, each_y: 4_u32}, {start_x: 1_u32, start_y: 0_u32, each_x: 2_u32, each_y: 2_u32}, {start_x: 0_u32, start_y: 1_u32, each_x: 1_u32, each_y: 2_u32}]"}],"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"constructors":[{"html_id":"new(header:PNG::Header)-class-method","name":"new","abstract":false,"args":[{"name":"header","external_name":"header","restriction":"::PNG::Header"}],"args_string":"(header : PNG::Header)","args_html":"(header : <a href=\"../PNG/Header.html\">PNG::Header</a>)","location":{"filename":"src/png/parser.cr","line_number":18,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L18"},"def":{"name":"new","args":[{"name":"header","external_name":"header","restriction":"::PNG::Header"}],"visibility":"Public","body":"_ = allocate\n_.initialize(header)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"next-instance-method","name":"next","abstract":false,"location":{"filename":"src/png/parser.cr","line_number":30,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L30"},"def":{"name":"next","visibility":"Public","body":"@scanline = @scanline + 1\nif @header.interlacing.none?\n  return false\nend\nif @scanline == pass_rows\n  while (@pass = @pass + 1) < PASSES.size\n    pass = PASSES[@pass]\n    if pass[:start_x] >= @header.width || pass[:start_y] >= @header.height\n    else\n      break\n    end\n  end\n  @scanline = 0\n  true\nelse\n  false\nend\n"}},{"html_id":"pass:Int32-instance-method","name":"pass","abstract":false,"location":{"filename":"src/png/parser.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L15"},"def":{"name":"pass","visibility":"Public","body":"@pass"}},{"html_id":"pass=(pass:Int32)-instance-method","name":"pass=","abstract":false,"args":[{"name":"pass","external_name":"pass","restriction":"::Int32"}],"args_string":"(pass : Int32)","args_html":"(pass : Int32)","location":{"filename":"src/png/parser.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L15"},"def":{"name":"pass=","args":[{"name":"pass","external_name":"pass","restriction":"::Int32"}],"visibility":"Public","body":"@pass = pass"}},{"html_id":"pass_rows-instance-method","name":"pass_rows","abstract":false,"location":{"filename":"src/png/parser.cr","line_number":70,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L70"},"def":{"name":"pass_rows","visibility":"Public","body":"pass = PASSES[@pass]\n((@header.height - pass[:start_y]) + (pass[:each_y] - 1)) // pass[:each_y]\n"}},{"html_id":"row_bytes-instance-method","name":"row_bytes","abstract":false,"location":{"filename":"src/png/parser.cr","line_number":75,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L75"},"def":{"name":"row_bytes","visibility":"Public","body":"@header.bytes_per_row(row_pixels)"}},{"html_id":"row_pixels-instance-method","name":"row_pixels","abstract":false,"location":{"filename":"src/png/parser.cr","line_number":60,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L60"},"def":{"name":"row_pixels","visibility":"Public","body":"case @header.interlacing\nwhen Interlacing::Adam7\n  pass = PASSES[@pass]\n  ((@header.width - pass[:start_x]) / pass[:each_x]).ceil.to_u32\nelse\n  @header.width\nend"}},{"html_id":"scanline:Int32-instance-method","name":"scanline","abstract":false,"location":{"filename":"src/png/parser.cr","line_number":16,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L16"},"def":{"name":"scanline","visibility":"Public","body":"@scanline"}},{"html_id":"scanline=(scanline:Int32)-instance-method","name":"scanline=","abstract":false,"args":[{"name":"scanline","external_name":"scanline","restriction":"::Int32"}],"args_string":"(scanline : Int32)","args_html":"(scanline : Int32)","location":{"filename":"src/png/parser.cr","line_number":16,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L16"},"def":{"name":"scanline=","args":[{"name":"scanline","external_name":"scanline","restriction":"::Int32"}],"visibility":"Public","body":"@scanline = scanline"}},{"html_id":"scanline_size-instance-method","name":"scanline_size","abstract":false,"location":{"filename":"src/png/parser.cr","line_number":21,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L21"},"def":{"name":"scanline_size","visibility":"Public","body":"case @header.interlacing\nwhen Interlacing::Adam7\n  @header.bytes_per_row(row_pixels)\nelse\n  @header.bytes_per_row\nend"}},{"html_id":"x(n)-instance-method","name":"x","abstract":false,"args":[{"name":"n","external_name":"n","restriction":""}],"args_string":"(n)","args_html":"(n)","location":{"filename":"src/png/parser.cr","line_number":53,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L53"},"def":{"name":"x","args":[{"name":"n","external_name":"n","restriction":""}],"visibility":"Public","body":"if @header.interlacing.none?\n  return n\nend\npass = PASSES[@pass]\npass[:start_x] + (n * pass[:each_x])\n"}},{"html_id":"y-instance-method","name":"y","abstract":false,"location":{"filename":"src/png/parser.cr","line_number":46,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/parser.cr#L46"},"def":{"name":"y","visibility":"Public","body":"if @header.interlacing.none?\n  return @scanline\nend\npass = PASSES[@pass]\npass[:start_y] + (@scanline * pass[:each_y])\n"}}]},{"html_id":"png/PNG/PixelSize","path":"PNG/PixelSize.html","kind":"struct","full_name":"PNG::PixelSize","name":"PixelSize","abstract":false,"superclass":{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/pixel_size.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L2"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"class_methods":[{"html_id":"parse(io:IO)-class-method","name":"parse","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/png/pixel_size.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L3"},"def":{"name":"parse","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"x = io.read_bytes(UInt32, IO::ByteFormat::BigEndian)\ny = io.read_bytes(UInt32, IO::ByteFormat::BigEndian)\nmeters = io.read_bytes(UInt8)\nnew(x, y, meters > 0)\n"}}],"constructors":[{"html_id":"new(x:UInt32,y:UInt32,meters:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"::UInt32"},{"name":"y","external_name":"y","restriction":"::UInt32"},{"name":"meters","default_value":"false","external_name":"meters","restriction":"::Bool"}],"args_string":"(x : UInt32, y : UInt32, meters : Bool = false)","args_html":"(x : UInt32, y : UInt32, meters : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/png/pixel_size.cr","line_number":17,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L17"},"def":{"name":"new","args":[{"name":"x","external_name":"x","restriction":"::UInt32"},{"name":"y","external_name":"y","restriction":"::UInt32"},{"name":"meters","default_value":"false","external_name":"meters","restriction":"::Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(x, y, meters)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"meters=(meters:Bool)-instance-method","name":"meters=","doc":"When true, x and y represent how many pixels are in a meter.\nWhen false, x and y represent the aspect ratio of a pixel","summary":"<p>When true, x and y represent how many pixels are in a meter.</p>","abstract":false,"args":[{"name":"meters","external_name":"meters","restriction":"Bool"}],"args_string":"(meters : Bool)","args_html":"(meters : Bool)","location":{"filename":"src/png/pixel_size.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L15"},"def":{"name":"meters=","args":[{"name":"meters","external_name":"meters","restriction":"Bool"}],"visibility":"Public","body":"@meters = meters"}},{"html_id":"meters?:Bool-instance-method","name":"meters?","doc":"When true, x and y represent how many pixels are in a meter.\nWhen false, x and y represent the aspect ratio of a pixel","summary":"<p>When true, x and y represent how many pixels are in a meter.</p>","abstract":false,"location":{"filename":"src/png/pixel_size.cr","line_number":15,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L15"},"def":{"name":"meters?","return_type":"Bool","visibility":"Public","body":"@meters"}},{"html_id":"write(io:IO)-instance-method","name":"write","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/png/pixel_size.cr","line_number":20,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L20"},"def":{"name":"write","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io.write_bytes(@x, IO::ByteFormat::BigEndian)\nio.write_bytes(@y, IO::ByteFormat::BigEndian)\nio.write_byte(meters? ? 1_u8 : 0_u8)\n"}},{"html_id":"x:UInt32-instance-method","name":"x","abstract":false,"location":{"filename":"src/png/pixel_size.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L10"},"def":{"name":"x","return_type":"UInt32","visibility":"Public","body":"@x"}},{"html_id":"x=(x:UInt32)-instance-method","name":"x=","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"UInt32"}],"args_string":"(x : UInt32)","args_html":"(x : UInt32)","location":{"filename":"src/png/pixel_size.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L10"},"def":{"name":"x=","args":[{"name":"x","external_name":"x","restriction":"UInt32"}],"visibility":"Public","body":"@x = x"}},{"html_id":"y:UInt32-instance-method","name":"y","abstract":false,"location":{"filename":"src/png/pixel_size.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L11"},"def":{"name":"y","return_type":"UInt32","visibility":"Public","body":"@y"}},{"html_id":"y=(y:UInt32)-instance-method","name":"y=","abstract":false,"args":[{"name":"y","external_name":"y","restriction":"UInt32"}],"args_string":"(y : UInt32)","args_html":"(y : UInt32)","location":{"filename":"src/png/pixel_size.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/pixel_size.cr#L11"},"def":{"name":"y=","args":[{"name":"y","external_name":"y","restriction":"UInt32"}],"visibility":"Public","body":"@y = y"}}]},{"html_id":"png/PNG/RGB","path":"PNG/RGB.html","kind":"struct","full_name":"PNG::RGB(T)","name":"RGB","abstract":false,"superclass":{"html_id":"png/PNG/Color","kind":"struct","full_name":"PNG::Color","name":"Color"},"ancestors":[{"html_id":"png/PNG/Color","kind":"struct","full_name":"PNG::Color","name":"Color"},{"html_id":"png/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/colors/rgb.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L2"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"class_methods":[{"html_id":"[](r:T,g:T,b:T)-class-method","name":"[]","abstract":false,"args":[{"name":"r","external_name":"r","restriction":"T"},{"name":"g","external_name":"g","restriction":"T"},{"name":"b","external_name":"b","restriction":"T"}],"args_string":"(r : T, g : T, b : T)","args_html":"(r : T, g : T, b : T)","location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"[]","args":[{"name":"r","external_name":"r","restriction":"T"},{"name":"g","external_name":"g","restriction":"T"},{"name":"b","external_name":"b","restriction":"T"}],"visibility":"Public","body":"PNG::RGB(T).new(r, g, b)"}},{"html_id":"color_type-class-method","name":"color_type","abstract":false,"location":{"filename":"src/png/colors/rgb.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L3"},"def":{"name":"color_type","visibility":"Public","body":"ColorType::TrueColor"}},{"html_id":"from_hsv(hsv:HSV)-class-method","name":"from_hsv","abstract":false,"args":[{"name":"hsv","external_name":"hsv","restriction":"HSV"}],"args_string":"(hsv : HSV)","args_html":"(hsv : <a href=\"../PNG/HSV.html\">HSV</a>)","location":{"filename":"src/png/colors/rgb.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L7"},"def":{"name":"from_hsv","args":[{"name":"hsv","external_name":"hsv","restriction":"HSV"}],"visibility":"Public","body":"h, s, v = hsv.h, hsv.s, hsv.v\nc = v * s\nx = c * (1 - (((h / 60.0) % 2) - 1).abs)\nm = v - c\nr, g, b = case h\nwhen 0...60\n  {c, x, 0}\nwhen 60...120\n  {x, c, 0}\nwhen 120...180\n  {0, c, x}\nwhen 180...240\n  {0, x, c}\nwhen 240...300\n  {x, 0, c}\nelse\n  {c, 0, x}\nend\nr = T.new(((r + m) * T::MAX).clamp(0, T::MAX))\ng = T.new(((g + m) * T::MAX).clamp(0, T::MAX))\nb = T.new(((b + m) * T::MAX).clamp(0, T::MAX))\nRGB(T).new(r, g, b)\n"}}],"constructors":[{"html_id":"new(r:T,g:T,b:T)-class-method","name":"new","abstract":false,"args":[{"name":"r","external_name":"r","restriction":"T"},{"name":"g","external_name":"g","restriction":"T"},{"name":"b","external_name":"b","restriction":"T"}],"args_string":"(r : T, g : T, b : T)","args_html":"(r : T, g : T, b : T)","location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"new","args":[{"name":"r","external_name":"r","restriction":"T"},{"name":"g","external_name":"g","restriction":"T"},{"name":"b","external_name":"b","restriction":"T"}],"visibility":"Public","body":"_ = RGB(T).allocate\n_.initialize(r, g, b)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(channels)-class-method","name":"new","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":""}],"args_string":"(channels)","args_html":"(channels)","location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"new","args":[{"name":"channels","external_name":"channels","restriction":""}],"visibility":"Public","body":"_ = RGB(T).allocate\n_.initialize(channels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"b-instance-method","name":"b","abstract":false,"location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"b","visibility":"Public","body":"@channels[2]"}},{"html_id":"b=(value:T)-instance-method","name":"b=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"b=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[2] = value"}},{"html_id":"g-instance-method","name":"g","abstract":false,"location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"g","visibility":"Public","body":"@channels[1]"}},{"html_id":"g=(value:T)-instance-method","name":"g=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"g=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[1] = value"}},{"html_id":"r-instance-method","name":"r","abstract":false,"location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"r","visibility":"Public","body":"@channels[0]"}},{"html_id":"r=(value:T)-instance-method","name":"r=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"r=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[0] = value"}},{"html_id":"to_rgb8-instance-method","name":"to_rgb8","abstract":false,"location":{"filename":"src/png/colors/rgb.cr","line_number":33,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L33"},"def":{"name":"to_rgb8","visibility":"Public","body":"RGB(UInt8).new(UInt8.new(((r / T::MAX) * UInt8::MAX)), UInt8.new(((g / T::MAX) * UInt8::MAX)), UInt8.new(((b / T::MAX) * UInt8::MAX)))"}},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"(((io << PNG::RGB(T)) << '(') << (@channels.join(\", \"))) << ')'"}},{"html_id":"to_u16-instance-method","name":"to_u16","abstract":false,"location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"to_u16","visibility":"Public","body":"if T == UInt16\n  self\nelse\n  PNG::RGB(UInt16).new(@channels.map do |c|\n    UInt16.new((c / T::MAX) * UInt16::MAX)\n  end)\nend"}},{"html_id":"to_u32-instance-method","name":"to_u32","abstract":false,"location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"to_u32","visibility":"Public","body":"if T == UInt32\n  self\nelse\n  PNG::RGB(UInt32).new(@channels.map do |c|\n    UInt32.new((c / T::MAX) * UInt32::MAX)\n  end)\nend"}},{"html_id":"to_u8-instance-method","name":"to_u8","abstract":false,"location":{"filename":"src/png/colors/rgb.cr","line_number":31,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgb.cr#L31"},"def":{"name":"to_u8","visibility":"Public","body":"if T == UInt8\n  self\nelse\n  PNG::RGB(UInt8).new(@channels.map do |c|\n    UInt8.new((c / T::MAX) * UInt8::MAX)\n  end)\nend"}}]},{"html_id":"png/PNG/RGBA","path":"PNG/RGBA.html","kind":"struct","full_name":"PNG::RGBA(T)","name":"RGBA","abstract":false,"superclass":{"html_id":"png/PNG/Color","kind":"struct","full_name":"PNG::Color","name":"Color"},"ancestors":[{"html_id":"png/PNG/Color","kind":"struct","full_name":"PNG::Color","name":"Color"},{"html_id":"png/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/colors/rgba.cr","line_number":2,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L2"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"class_methods":[{"html_id":"[](r:T,g:T,b:T,a:T)-class-method","name":"[]","abstract":false,"args":[{"name":"r","external_name":"r","restriction":"T"},{"name":"g","external_name":"g","restriction":"T"},{"name":"b","external_name":"b","restriction":"T"},{"name":"a","external_name":"a","restriction":"T"}],"args_string":"(r : T, g : T, b : T, a : T)","args_html":"(r : T, g : T, b : T, a : T)","location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"[]","args":[{"name":"r","external_name":"r","restriction":"T"},{"name":"g","external_name":"g","restriction":"T"},{"name":"b","external_name":"b","restriction":"T"},{"name":"a","external_name":"a","restriction":"T"}],"visibility":"Public","body":"PNG::RGBA(T).new(r, g, b, a)"}},{"html_id":"color_type-class-method","name":"color_type","abstract":false,"location":{"filename":"src/png/colors/rgba.cr","line_number":3,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L3"},"def":{"name":"color_type","visibility":"Public","body":"ColorType::TrueColorAlpha"}}],"constructors":[{"html_id":"new(r:T,g:T,b:T,a:T)-class-method","name":"new","abstract":false,"args":[{"name":"r","external_name":"r","restriction":"T"},{"name":"g","external_name":"g","restriction":"T"},{"name":"b","external_name":"b","restriction":"T"},{"name":"a","external_name":"a","restriction":"T"}],"args_string":"(r : T, g : T, b : T, a : T)","args_html":"(r : T, g : T, b : T, a : T)","location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"new","args":[{"name":"r","external_name":"r","restriction":"T"},{"name":"g","external_name":"g","restriction":"T"},{"name":"b","external_name":"b","restriction":"T"},{"name":"a","external_name":"a","restriction":"T"}],"visibility":"Public","body":"_ = RGBA(T).allocate\n_.initialize(r, g, b, a)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(channels)-class-method","name":"new","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":""}],"args_string":"(channels)","args_html":"(channels)","location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"new","args":[{"name":"channels","external_name":"channels","restriction":""}],"visibility":"Public","body":"_ = RGBA(T).allocate\n_.initialize(channels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"a-instance-method","name":"a","abstract":false,"location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"a","visibility":"Public","body":"@channels[3]"}},{"html_id":"a=(value:T)-instance-method","name":"a=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"a=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[3] = value"}},{"html_id":"b-instance-method","name":"b","abstract":false,"location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"b","visibility":"Public","body":"@channels[2]"}},{"html_id":"b=(value:T)-instance-method","name":"b=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"b=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[2] = value"}},{"html_id":"g-instance-method","name":"g","abstract":false,"location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"g","visibility":"Public","body":"@channels[1]"}},{"html_id":"g=(value:T)-instance-method","name":"g=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"g=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[1] = value"}},{"html_id":"r-instance-method","name":"r","abstract":false,"location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"r","visibility":"Public","body":"@channels[0]"}},{"html_id":"r=(value:T)-instance-method","name":"r=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"r=","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"@channels[0] = value"}},{"html_id":"to_rgb8-instance-method","name":"to_rgb8","abstract":false,"location":{"filename":"src/png/colors/rgba.cr","line_number":9,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L9"},"def":{"name":"to_rgb8","visibility":"Public","body":"alpha = (a / T::MAX)\nRGB(UInt8).new(UInt8.new(((r / T::MAX) * alpha) * UInt8::MAX), UInt8.new(((g / T::MAX) * alpha) * UInt8::MAX), UInt8.new(((b / T::MAX) * alpha) * UInt8::MAX))\n"}},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"(((io << PNG::RGBA(T)) << '(') << (@channels.join(\", \"))) << ')'"}},{"html_id":"to_u16-instance-method","name":"to_u16","abstract":false,"location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"to_u16","visibility":"Public","body":"if T == UInt16\n  self\nelse\n  PNG::RGBA(UInt16).new(@channels.map do |c|\n    UInt16.new((c / T::MAX) * UInt16::MAX)\n  end)\nend"}},{"html_id":"to_u32-instance-method","name":"to_u32","abstract":false,"location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"to_u32","visibility":"Public","body":"if T == UInt32\n  self\nelse\n  PNG::RGBA(UInt32).new(@channels.map do |c|\n    UInt32.new((c / T::MAX) * UInt32::MAX)\n  end)\nend"}},{"html_id":"to_u8-instance-method","name":"to_u8","abstract":false,"location":{"filename":"src/png/colors/rgba.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/colors/rgba.cr#L7"},"def":{"name":"to_u8","visibility":"Public","body":"if T == UInt8\n  self\nelse\n  PNG::RGBA(UInt8).new(@channels.map do |c|\n    UInt8.new((c / T::MAX) * UInt8::MAX)\n  end)\nend"}}]},{"html_id":"png/PNG/Scanline","path":"PNG/Scanline.html","kind":"struct","full_name":"PNG::Scanline","name":"Scanline","abstract":false,"superclass":{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"png/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"png/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/png/scanline.cr","line_number":5,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L5"}],"repository_name":"png","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"png/PNG","kind":"module","full_name":"PNG","name":"PNG"},"doc":"A row of pixels including their filtering method","summary":"<p>A row of pixels including their filtering method</p>","constructors":[{"html_id":"new(header:PNG::Header,filter:PNG::FilterMethod,data:Slice(UInt8))-class-method","name":"new","abstract":false,"args":[{"name":"header","external_name":"header","restriction":"::PNG::Header"},{"name":"filter","external_name":"filter","restriction":"::PNG::FilterMethod"},{"name":"data","external_name":"data","restriction":"::Slice(::UInt8)"}],"args_string":"(header : PNG::Header, filter : PNG::FilterMethod, data : Slice(UInt8))","args_html":"(header : <a href=\"../PNG/Header.html\">PNG::Header</a>, filter : <a href=\"../PNG/FilterMethod.html\">PNG::FilterMethod</a>, data : Slice(UInt8))","location":{"filename":"src/png/scanline.cr","line_number":13,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L13"},"def":{"name":"new","args":[{"name":"header","external_name":"header","restriction":"::PNG::Header"},{"name":"filter","external_name":"filter","restriction":"::PNG::FilterMethod"},{"name":"data","external_name":"data","restriction":"::Slice(::UInt8)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(header, filter, data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](*args,**options)-instance-method","name":"[]","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/scanline.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L10"},"def":{"name":"[]","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@data[*args, **options]"}},{"html_id":"[](*args,**options,&)-instance-method","name":"[]","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/scanline.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L10"},"def":{"name":"[]","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@data.[](*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"[]?(*args,**options)-instance-method","name":"[]?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/scanline.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L10"},"def":{"name":"[]?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@data[*args, **options]?"}},{"html_id":"[]?(*args,**options,&)-instance-method","name":"[]?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/scanline.cr","line_number":10,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L10"},"def":{"name":"[]?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@data.[]?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"average(other:Scanline,&block:UInt8->Nil)-instance-method","name":"average","doc":"Filt(x) = Orig(x) - floor((Orig(a) + Orig(b)) / 2)","summary":"<p>Filt(x) = Orig(x) - floor((Orig(a) + Orig(b)) / 2)</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Scanline"}],"args_string":"(other : Scanline, &block : UInt8 -> Nil)","args_html":"(other : <a href=\"../PNG/Scanline.html\">Scanline</a>, &block : UInt8 -> Nil)","location":{"filename":"src/png/scanline.cr","line_number":176,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L176"},"def":{"name":"average","args":[{"name":"other","external_name":"other","restriction":"Scanline"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(UInt8 -> Nil)"},"visibility":"Public","body":"bytes = bytes_per_pixel\n(0...@data.size).each do |i|\n  b = other[i]\n  a = i < bytes ? 0_u16 : @data[i - bytes].to_u16\n  yield @data[i] &- ((a + b) >> 1)\nend\n"}},{"html_id":"average(other:Nil,&block:UInt8->Nil)-instance-method","name":"average","doc":"Filt(x) = Orig(x) - floor((Orig(a) + Orig(b)) / 2)","summary":"<p>Filt(x) = Orig(x) - floor((Orig(a) + Orig(b)) / 2)</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Nil"}],"args_string":"(other : Nil, &block : UInt8 -> Nil)","args_html":"(other : Nil, &block : UInt8 -> Nil)","location":{"filename":"src/png/scanline.cr","line_number":187,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L187"},"def":{"name":"average","args":[{"name":"other","external_name":"other","restriction":"Nil"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(UInt8 -> Nil)"},"visibility":"Public","body":"bytes = bytes_per_pixel\n(0...@data.size).each do |i|\n  a = i < bytes ? 0_u16 : @data[i - bytes].to_u16\n  yield @data[i] &- (a >> 1)\nend\n"}},{"html_id":"average(other:Scanline|Nil,io:IO)-instance-method","name":"average","doc":"Filt(x) = Orig(x) - floor((Orig(a) + Orig(b)) / 2)","summary":"<p>Filt(x) = Orig(x) - floor((Orig(a) + Orig(b)) / 2)</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Scanline | ::Nil"},{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(other : Scanline | Nil, io : IO)","args_html":"(other : <a href=\"../PNG/Scanline.html\">Scanline</a> | Nil, io : IO)","location":{"filename":"src/png/scanline.cr","line_number":197,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L197"},"def":{"name":"average","args":[{"name":"other","external_name":"other","restriction":"Scanline | ::Nil"},{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"average(other) do |byte|\n  io.write_byte(byte)\nend"}},{"html_id":"bit_depth(*args,**options)-instance-method","name":"bit_depth","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/scanline.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L11"},"def":{"name":"bit_depth","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.bit_depth(*args, **options)"}},{"html_id":"bit_depth(*args,**options,&)-instance-method","name":"bit_depth","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/scanline.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L11"},"def":{"name":"bit_depth","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.bit_depth(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"bit_index(x:UInt32,y:UInt32)-instance-method","name":"bit_index","doc":"Calculates the index into the canvas that a value would be at, accounting\nfor padding that would exist at the end of a scanline where bit depth < 8","summary":"<p>Calculates the index into the canvas that a value would be at, accounting for padding that would exist at the end of a scanline where bit depth &lt; 8</p>","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"UInt32"},{"name":"y","external_name":"y","restriction":"UInt32"}],"args_string":"(x : UInt32, y : UInt32)","args_html":"(x : UInt32, y : UInt32)","location":{"filename":"src/png/scanline.cr","line_number":18,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L18"},"def":{"name":"bit_index","args":[{"name":"x","external_name":"x","restriction":"UInt32"},{"name":"y","external_name":"y","restriction":"UInt32"}],"visibility":"Public","body":"((y * header.bytes_per_row) * 8) + (x * @header.bits_per_pixel)"}},{"html_id":"bits_per_pixel(*args,**options)-instance-method","name":"bits_per_pixel","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/scanline.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L11"},"def":{"name":"bits_per_pixel","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.bits_per_pixel(*args, **options)"}},{"html_id":"bits_per_pixel(*args,**options,&)-instance-method","name":"bits_per_pixel","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/scanline.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L11"},"def":{"name":"bits_per_pixel","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.bits_per_pixel(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"bytes_per_pixel(*args,**options)-instance-method","name":"bytes_per_pixel","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/scanline.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L11"},"def":{"name":"bytes_per_pixel","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.bytes_per_pixel(*args, **options)"}},{"html_id":"bytes_per_pixel(*args,**options,&)-instance-method","name":"bytes_per_pixel","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/scanline.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L11"},"def":{"name":"bytes_per_pixel","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.bytes_per_pixel(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"channels(*args,**options)-instance-method","name":"channels","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/png/scanline.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L11"},"def":{"name":"channels","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@header.channels(*args, **options)"}},{"html_id":"channels(*args,**options,&)-instance-method","name":"channels","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/png/scanline.cr","line_number":11,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L11"},"def":{"name":"channels","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@header.channels(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"data:Bytes-instance-method","name":"data","abstract":false,"location":{"filename":"src/png/scanline.cr","line_number":8,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L8"},"def":{"name":"data","return_type":"Bytes","visibility":"Public","body":"@data"}},{"html_id":"data=(data:Bytes)-instance-method","name":"data=","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Bytes"}],"args_string":"(data : Bytes)","args_html":"(data : Bytes)","location":{"filename":"src/png/scanline.cr","line_number":8,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L8"},"def":{"name":"data=","args":[{"name":"data","external_name":"data","restriction":"Bytes"}],"visibility":"Public","body":"@data = data"}},{"html_id":"filter:FilterMethod-instance-method","name":"filter","abstract":false,"location":{"filename":"src/png/scanline.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L7"},"def":{"name":"filter","return_type":"FilterMethod","visibility":"Public","body":"@filter"}},{"html_id":"filter(previous:Scanline|Nil,&block:UInt8->Nil)-instance-method","name":"filter","doc":"Apply a filter","summary":"<p>Apply a filter</p>","abstract":false,"args":[{"name":"previous","external_name":"previous","restriction":"Scanline | ::Nil"}],"args_string":"(previous : Scanline | Nil, &block : UInt8 -> Nil)","args_html":"(previous : <a href=\"../PNG/Scanline.html\">Scanline</a> | Nil, &block : UInt8 -> Nil)","location":{"filename":"src/png/scanline.cr","line_number":77,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L77"},"def":{"name":"filter","args":[{"name":"previous","external_name":"previous","restriction":"Scanline | ::Nil"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(UInt8 -> Nil)"},"visibility":"Public","body":"case @filter\nwhen FilterMethod::None\n  none(&block)\nwhen FilterMethod::Sub\n  sub(&block)\nwhen FilterMethod::Up\n  up(previous, &block)\nwhen FilterMethod::Average\n  average(previous, &block)\nwhen FilterMethod::Paeth\n  paeth(previous, &block)\nelse\n  PNG.debug(\"Unsupported filter method: #{@filter}\")\nend"}},{"html_id":"filter=(filter:FilterMethod)-instance-method","name":"filter=","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":"FilterMethod"}],"args_string":"(filter : FilterMethod)","args_html":"(filter : <a href=\"../PNG/FilterMethod.html\">FilterMethod</a>)","location":{"filename":"src/png/scanline.cr","line_number":7,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L7"},"def":{"name":"filter=","args":[{"name":"filter","external_name":"filter","restriction":"FilterMethod"}],"visibility":"Public","body":"@filter = filter"}},{"html_id":"header:Header-instance-method","name":"header","abstract":false,"location":{"filename":"src/png/scanline.cr","line_number":6,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L6"},"def":{"name":"header","return_type":"Header","visibility":"Public","body":"@header"}},{"html_id":"header=(header:Header)-instance-method","name":"header=","abstract":false,"args":[{"name":"header","external_name":"header","restriction":"Header"}],"args_string":"(header : Header)","args_html":"(header : <a href=\"../PNG/Header.html\">Header</a>)","location":{"filename":"src/png/scanline.cr","line_number":6,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L6"},"def":{"name":"header=","args":[{"name":"header","external_name":"header","restriction":"Header"}],"visibility":"Public","body":"@header = header"}},{"html_id":"none(&)-instance-method","name":"none","doc":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","summary":"<pre><code class=\"language-crystal\"></code></pre>","abstract":false,"location":{"filename":"src/png/scanline.cr","line_number":89,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L89"},"def":{"name":"none","yields":1,"block_arity":1,"visibility":"Public","body":"@data.each do |d|\n  yield d\nend"}},{"html_id":"paeth(other:Scanline,&block:UInt8->Nil)-instance-method","name":"paeth","doc":"Filt(x) = Orig(x) - PaethPredictor(Orig(a), Orig(b), Orig(c))","summary":"<p>Filt(x) = Orig(x) - PaethPredictor(Orig(a), Orig(b), Orig(c))</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Scanline"}],"args_string":"(other : Scanline, &block : UInt8 -> Nil)","args_html":"(other : <a href=\"../PNG/Scanline.html\">Scanline</a>, &block : UInt8 -> Nil)","location":{"filename":"src/png/scanline.cr","line_number":231,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L231"},"def":{"name":"paeth","args":[{"name":"other","external_name":"other","restriction":"Scanline"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(UInt8 -> Nil)"},"visibility":"Public","body":"bytes = bytes_per_pixel\n(0...@data.size).each do |i|\n  b = other[i]\n  a = i < bytes ? 0_u8 : @data[i - bytes]\n  c = i < bytes ? 0_u8 : other[i - bytes]\n  yield @data[i] &- (paeth_predict(a, b, c))\nend\n"}},{"html_id":"paeth(other:Nil,&block:UInt8->Nil)-instance-method","name":"paeth","doc":"Filt(x) = Orig(x) - PaethPredictor(Orig(a), Orig(b), Orig(c))","summary":"<p>Filt(x) = Orig(x) - PaethPredictor(Orig(a), Orig(b), Orig(c))</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Nil"}],"args_string":"(other : Nil, &block : UInt8 -> Nil)","args_html":"(other : Nil, &block : UInt8 -> Nil)","location":{"filename":"src/png/scanline.cr","line_number":244,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L244"},"def":{"name":"paeth","args":[{"name":"other","external_name":"other","restriction":"Nil"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(UInt8 -> Nil)"},"visibility":"Public","body":"bytes = bytes_per_pixel\n(0...@data.size).each do |i|\n  b = 0_u8\n  a = i < bytes ? 0_u8 : @data[i - bytes]\n  c = 0_u8\n  yield @data[i] &- (paeth_predict(a, b, c))\nend\n"}},{"html_id":"paeth(other:Scanline|Nil,io:IO)-instance-method","name":"paeth","doc":"Filt(x) = Orig(x) - PaethPredictor(Orig(a), Orig(b), Orig(c))","summary":"<p>Filt(x) = Orig(x) - PaethPredictor(Orig(a), Orig(b), Orig(c))</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Scanline | ::Nil"},{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(other : Scanline | Nil, io : IO)","args_html":"(other : <a href=\"../PNG/Scanline.html\">Scanline</a> | Nil, io : IO)","location":{"filename":"src/png/scanline.cr","line_number":257,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L257"},"def":{"name":"paeth","args":[{"name":"other","external_name":"other","restriction":"Scanline | ::Nil"},{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"paeth(other) do |byte|\n  io.write_byte(byte)\nend"}},{"html_id":"paeth_predict(a,b,c)-instance-method","name":"paeth_predict","doc":"https://www.w3.org/TR/png-3/#bib-paeth\n","summary":"<p>https://www.w3.org/TR/png-3/#bib-paeth</p>","abstract":false,"args":[{"name":"a","external_name":"a","restriction":""},{"name":"b","external_name":"b","restriction":""},{"name":"c","external_name":"c","restriction":""}],"args_string":"(a, b, c)","args_html":"(a, b, c)","location":{"filename":"src/png/scanline.cr","line_number":265,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L265"},"def":{"name":"paeth_predict","args":[{"name":"a","external_name":"a","restriction":""},{"name":"b","external_name":"b","restriction":""},{"name":"c","external_name":"c","restriction":""}],"visibility":"Public","body":"a, b, c = a.to_i16, b.to_i16, c.to_i16\np = (a + b) - c\npa = (p - a).abs\npb = (p - b).abs\npc = (p - c).abs\nif pa <= pb && pa <= pc\n  a\nelse\n  if pb <= pc\n    b\n  else\n    c\n  end\nend\n"}},{"html_id":"pixel(x:Int):Bytes-instance-method","name":"pixel","doc":"Return the bytes that represent a pixel at x in this scanline","summary":"<p>Return the bytes that represent a pixel at x in this scanline</p>","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"Int"}],"args_string":"(x : Int) : Bytes","args_html":"(x : Int) : Bytes","location":{"filename":"src/png/scanline.cr","line_number":43,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L43"},"def":{"name":"pixel","args":[{"name":"x","external_name":"x","restriction":"Int"}],"return_type":"Bytes","visibility":"Public","body":"case bit_depth\nwhen .<(8)\n  shift = 8_u8 - bit_depth\n  max = UInt8::MAX >> shift\n  Bytes.new(channels.to_i32) do |n|\n    byte, bit = ((x * bits_per_pixel) + (n * bit_depth)).divmod(8)\n    (@data[byte] >> (shift - bit)) & max\n  end\nwhen 8, 16\n  byte = (x * bits_per_pixel) // 8\n  @data[byte...(byte + (bits_per_pixel // 8))]\nelse\n  raise(Error.new(\"Invalid bit depth: #{bit_depth}\"))\nend"}},{"html_id":"set_pixel(x:Int,values:Bytes):Nil-instance-method","name":"set_pixel","doc":"Sets a pixel in this scanline based on the header\n","summary":"<p>Sets a pixel in this scanline based on the header</p>","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"Int"},{"name":"values","external_name":"values","restriction":"Bytes"}],"args_string":"(x : Int, values : Bytes) : Nil","args_html":"(x : Int, values : Bytes) : Nil","location":{"filename":"src/png/scanline.cr","line_number":24,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L24"},"def":{"name":"set_pixel","args":[{"name":"x","external_name":"x","restriction":"Int"},{"name":"values","external_name":"values","restriction":"Bytes"}],"return_type":"Nil","visibility":"Public","body":"case bit_depth\nwhen .<(8)\n  shift = 8_u8 - bit_depth\n  max = UInt8::MAX >> shift\n  channels.times do |n|\n    byte, bit = ((x * bits_per_pixel) + (n * bit_depth)).divmod(8)\n    __temp_50 = byte\n    @data[__temp_50] = @data[__temp_50] | (values[n] << ((8 &- bit_depth) - bit))\n  end\nwhen 8, 16\n  byte = (x * bits_per_pixel) // 8\n  values.each_with_index do |v, n|\n    @data[byte + n] = v\n  end\nelse\n  raise(Error.new(\"Invalid bit depth: #{bit_depth}\"))\nend"}},{"html_id":"sub(&block:UInt8->Nil)-instance-method","name":"sub","doc":"Filt(x) = Orig(x) - Orig(a)\nRun the sub filter strategy yielding each modified byte to the block","summary":"<p>Filt(x) = Orig(x) - Orig(a) Run the sub filter strategy yielding each modified byte to the block</p>","abstract":false,"location":{"filename":"src/png/scanline.cr","line_number":108,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L108"},"def":{"name":"sub","yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(UInt8 -> Nil)"},"visibility":"Public","body":"bytes = bytes_per_pixel\n@data[...bytes].each do |d|\n  yield d\nend\n(bytes...@data.size).each do |x|\n  a = x - bytes\n  yield @data[x] &- @data[a]\nend\n"}},{"html_id":"sub(io:IO)-instance-method","name":"sub","doc":"Filt(x) = Orig(x) - Orig(a)\nRun the sub filter strategy yielding each modified byte to the block","summary":"<p>Filt(x) = Orig(x) - Orig(a) Run the sub filter strategy yielding each modified byte to the block</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/png/scanline.cr","line_number":119,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L119"},"def":{"name":"sub","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"sub do |byte|\n  io.write_byte(byte)\nend"}},{"html_id":"unaverage(other:Scanline)-instance-method","name":"unaverage","doc":"Removes the type 3 Average filter via:\n`Recon(x) = Filt(x) + floor((Recon(a) + Recon(b)) / 2)`","summary":"<p>Removes the type 3 Average filter via: <code>Recon(x) = Filt(x) + floor((Recon(a) + Recon(b)) / 2)</code></p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Scanline"}],"args_string":"(other : Scanline)","args_html":"(other : <a href=\"../PNG/Scanline.html\">Scanline</a>)","location":{"filename":"src/png/scanline.cr","line_number":155,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L155"},"def":{"name":"unaverage","args":[{"name":"other","external_name":"other","restriction":"Scanline"}],"visibility":"Public","body":"bytes = bytes_per_pixel\n(0...@data.size).each do |i|\n  b = other[i]\n  a = i < bytes ? 0_u16 : @data[i - bytes].to_u16\n  @data[i] = @data[i] &+ ((a + b) >> 1)\nend\n"}},{"html_id":"unaverage(other:Nil)-instance-method","name":"unaverage","doc":"Removes the type 3 Average filter via:\n`Recon(x) = Filt(x) + floor((Recon(a) + Recon(b)) / 2)`","summary":"<p>Removes the type 3 Average filter via: <code>Recon(x) = Filt(x) + floor((Recon(a) + Recon(b)) / 2)</code></p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Nil"}],"args_string":"(other : Nil)","args_html":"(other : Nil)","location":{"filename":"src/png/scanline.cr","line_number":166,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L166"},"def":{"name":"unaverage","args":[{"name":"other","external_name":"other","restriction":"Nil"}],"visibility":"Public","body":"bytes = bytes_per_pixel\n(0...@data.size).each do |i|\n  a = i < bytes ? 0_u8 : @data[i - bytes]\n  @data[i] = @data[i] &+ (a >> 1)\nend\n"}},{"html_id":"unfilter(previous:Scanline|Nil)-instance-method","name":"unfilter","doc":"Remove any filtering in this scanline\n@see https://www.w3.org/TR/png-3/#9Filters","summary":"<p>Remove any filtering in this scanline @see https://www.w3.org/TR/png-3/#9Filters</p>","abstract":false,"args":[{"name":"previous","external_name":"previous","restriction":"Scanline | ::Nil"}],"args_string":"(previous : Scanline | Nil)","args_html":"(previous : <a href=\"../PNG/Scanline.html\">Scanline</a> | Nil)","location":{"filename":"src/png/scanline.cr","line_number":65,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L65"},"def":{"name":"unfilter","args":[{"name":"previous","external_name":"previous","restriction":"Scanline | ::Nil"}],"visibility":"Public","body":"case @filter\nwhen FilterMethod::None\nwhen FilterMethod::Sub\n  unsub\nwhen FilterMethod::Up\n  unup(previous)\nwhen FilterMethod::Average\n  unaverage(previous)\nwhen FilterMethod::Paeth\n  unpaeth(previous)\nelse\n  PNG.debug(\"Unsupported filter method: #{@filter}\")\nend"}},{"html_id":"unpaeth(other:Scanline)-instance-method","name":"unpaeth","doc":"Remove the Paeth filter type\n`Recon(x) = Filt(x) + PaethPredictor(Recon(a), Recon(b), Recon(c))`","summary":"<p>Remove the Paeth filter type <code>Recon(x) = Filt(x) + PaethPredictor(Recon(a), Recon(b), Recon(c))</code></p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Scanline"}],"args_string":"(other : Scanline)","args_html":"(other : <a href=\"../PNG/Scanline.html\">Scanline</a>)","location":{"filename":"src/png/scanline.cr","line_number":205,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L205"},"def":{"name":"unpaeth","args":[{"name":"other","external_name":"other","restriction":"Scanline"}],"visibility":"Public","body":"bytes = bytes_per_pixel\n(0...@data.size).each do |i|\n  b = other[i]\n  a = i < bytes ? 0_u8 : @data[i - bytes]\n  c = i < bytes ? 0_u8 : other[i - bytes]\n  @data[i] = @data[i] &+ (paeth_predict(a, b, c))\nend\n"}},{"html_id":"unpaeth(other:Nil)-instance-method","name":"unpaeth","doc":"Remove the Paeth filter type\n`Recon(x) = Filt(x) + PaethPredictor(Recon(a), Recon(b), Recon(c))`","summary":"<p>Remove the Paeth filter type <code>Recon(x) = Filt(x) + PaethPredictor(Recon(a), Recon(b), Recon(c))</code></p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Nil"}],"args_string":"(other : Nil)","args_html":"(other : Nil)","location":{"filename":"src/png/scanline.cr","line_number":218,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L218"},"def":{"name":"unpaeth","args":[{"name":"other","external_name":"other","restriction":"Nil"}],"visibility":"Public","body":"bytes = bytes_per_pixel\n(0...@data.size).each do |i|\n  b = 0_u8\n  a = i < bytes ? 0_u8 : @data[i - bytes]\n  c = 0_u8\n  @data[i] = @data[i] &+ (paeth_predict(a, b, c))\nend\n"}},{"html_id":"unsub-instance-method","name":"unsub","doc":"Remove the sub filter\nRecon(x) = Filt(x) + Recon(a)","summary":"<p>Remove the sub filter Recon(x) = Filt(x) + Recon(a)</p>","abstract":false,"location":{"filename":"src/png/scanline.cr","line_number":97,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L97"},"def":{"name":"unsub","visibility":"Public","body":"bytes = bytes_per_pixel\n(bytes.to_u32...@data.size).each do |x|\n  a = x - bytes\n  @data[x] = @data[x] &+ @data[a]\nend\n"}},{"html_id":"unup(other:Scanline|Nil)-instance-method","name":"unup","doc":"Remove the up filter","summary":"<p>Remove the up filter</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Scanline | ::Nil"}],"args_string":"(other : Scanline | Nil)","args_html":"(other : <a href=\"../PNG/Scanline.html\">Scanline</a> | Nil)","location":{"filename":"src/png/scanline.cr","line_number":126,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L126"},"def":{"name":"unup","args":[{"name":"other","external_name":"other","restriction":"Scanline | ::Nil"}],"visibility":"Public","body":"other.try do |other|\n  (0...@data.size).each do |i|\n    @data[i] = @data[i] &+ (other[i]? || 0_u8)\n  end\nend"}},{"html_id":"up(other:Scanline,&block:UInt8->Nil)-instance-method","name":"up","doc":"Filt(x) = Orig(x) - Orig(b)","summary":"<p>Filt(x) = Orig(x) - Orig(b)</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Scanline"}],"args_string":"(other : Scanline, &block : UInt8 -> Nil)","args_html":"(other : <a href=\"../PNG/Scanline.html\">Scanline</a>, &block : UInt8 -> Nil)","location":{"filename":"src/png/scanline.cr","line_number":135,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L135"},"def":{"name":"up","args":[{"name":"other","external_name":"other","restriction":"Scanline"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(UInt8 -> Nil)"},"visibility":"Public","body":"(0...@data.size).each do |i|\n  yield @data[i] &- other[i]\nend"}},{"html_id":"up(other:Nil,&block:UInt8->Nil)-instance-method","name":"up","doc":"Filt(x) = Orig(x) - Orig(b)","summary":"<p>Filt(x) = Orig(x) - Orig(b)</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Nil"}],"args_string":"(other : Nil, &block : UInt8 -> Nil)","args_html":"(other : Nil, &block : UInt8 -> Nil)","location":{"filename":"src/png/scanline.cr","line_number":142,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L142"},"def":{"name":"up","args":[{"name":"other","external_name":"other","restriction":"Nil"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(UInt8 -> Nil)"},"visibility":"Public","body":"@data.each do |d|\n  yield d\nend"}},{"html_id":"up(other:Scanline|Nil,io:IO)-instance-method","name":"up","doc":"Filt(x) = Orig(x) - Orig(b)","summary":"<p>Filt(x) = Orig(x) - Orig(b)</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Scanline | ::Nil"},{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(other : Scanline | Nil, io : IO)","args_html":"(other : <a href=\"../PNG/Scanline.html\">Scanline</a> | Nil, io : IO)","location":{"filename":"src/png/scanline.cr","line_number":147,"url":"https://github.com/SleepingInsomniac/png/blob/2ed795067f9ac330f18445871e6b029461f3da76/src/png/scanline.cr#L147"},"def":{"name":"up","args":[{"name":"other","external_name":"other","restriction":"Scanline | ::Nil"},{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"up(other) do |byte|\n  io.write_byte(byte)\nend"}}]}]}]}})